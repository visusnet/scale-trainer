{"version":3,"sources":["music/note.js","music/interval.js","music/key.js","components/AccidentalInput/AccidentalInput.jsx","components/NoteInput/NoteInput.jsx","components/ScaleQuestion/ScaleQuestion.jsx","music/random.js","ScaleTrainer.jsx","App.js","serviceWorker.js","index.js"],"names":["PITCHES","SHARP_ACCIDENTAL","NATURAL_ACCIDENTAL","FLAT_ACCIDENTAL","ACCIDENTALS","noteToString","note","pitch","accidental","previousPitch","previousPitchIndex","indexOf","length","nextPitch","nextPitchIndex","normalizeAccidentals","arguments","undefined","areNotesEqual","note1","note2","onlySharpNote1","onlySharpNote2","arePitchesEqual","areAccidentalsEqual","MAJOR_MINOR_PERFECT_INTERVALS","AUGMENTED_DIMINISHED_INTERVALS","INTERVAL_SEMITONE_MAP","P1","d2","m2","A1","semitone","half tone","half step","H","M2","d3","tone","whole tone","whole step","W","m3","A2","M3","d4","P4","A3","d5","A4","tritone","P5","d6","m6","A5","M6","d7","m7","A6","M7","d8","P8","A7","NEXT_SEMITONE_MAP","A","_A","Object","defineProperty","B","_B","C","_C","D","_D","E","_E","F","_F","G","_G","relativeIntervalsToRootIntervals","root","relativeIntervals","intervalNames","semitonesToRoot","reduce","intervals","relativeInterval","toConsumableArray","concat","CHURCH_MODES","HARMONIC_MINOR_SCALE","name","construction","modes","MELODIC_MINOR_SCALE","CHURCH_SCALES","keyToString","key","scale","mode","scaleIndex","modeToString","trim","applyModeToConstruction","array","rotateByOffset","map","element","index","_rotateArray","keyToNotes","slice","notes","interval","currentNote","n","numberOfSemitones","augmentedNote","augmentedSemitones","addInterval","AccidentalInput","props","accidentalIndex","isCurrentAccidental","isRoot","noteIndex","onChange","accidentalKey","react_default","a","createElement","className","htmlFor","type","id","value","checked","_createHandleAccidentalChange","disabled","NoteInput","tabIndex","autoFocus","e","preventDefault","pitchCandidate","toUpperCase","includes","_toPitch","target","_createHandlePitchChange","maxLength","DEFAULT_NOTE","ScaleQuestionComponent","state","isAnswered","isCorrect","showHint","_handleAnswer","_this","_canBeAnswered","setState","notes1","notes2","actualNotes","question","keys","answeredNotes","objectSpread","some","comparison","_handleHintClick","hintIndex","_getRandomInt","min","max","exclude","randomInt","Math","floor","random","_handleNextClick","onNextClick","_handleNoteChange","_updateNote","_isRoot","this","_this2","numberOfNotes","Array","from","_getNote","scaleConstruction","hints","join","modifier","onSubmit","renderScaleInputs","onClick","renderHint","renderSolution","_this3","noteIndices","requiredNumberOfAnswers","areAllNotesComplete","Component","IGNORED_NOTES","getRandomKey","includeModes","includeHarmonicMinor","includeMelodicMinor","scales","getRandomArrayElement","getRandomScale","getRandomMode","getRandomNote","ignoredNote","ScaleTrainer","_getBooleanFromLocalStorage","_updateQuestion","_handleOptionChange","option","localStorage","setItem","Fragment","renderOptions","ScaleQuestion_ScaleQuestionComponent","_questionToString","defaultValue","getItem","App","ScaleTrainer_ScaleTrainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1f680b1.chunk.js","sourcesContent":["// @flow\nexport type Pitch = 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G';\nexport type Accidental = '♯' | '♭' | '♮';\nexport type Note = {\n    pitch: Pitch,\n    accidental: Accidental\n}\n\nexport const PITCHES: Pitch[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\nexport const SHARP_ACCIDENTAL: Accidental = '♯';\nexport const NATURAL_ACCIDENTAL: Accidental = '♮';\nexport const FLAT_ACCIDENTAL: Accidental = '♭';\nexport const ACCIDENTALS: Accidental[] = [FLAT_ACCIDENTAL, SHARP_ACCIDENTAL, NATURAL_ACCIDENTAL];\n\nexport function accidentalToString(accidental: Accidental): string {\n    return accidental === NATURAL_ACCIDENTAL ? '' : accidental;\n}\n\nexport function noteToString(note: Note): string {\n    return note.pitch + accidentalToString(note.accidental);\n}\n\nexport function note(pitch: Pitch, accidental: ?Accidental): Note {\n    return {\n        pitch,\n        accidental: accidental ? accidental : NATURAL_ACCIDENTAL\n    };\n}\n\nexport function arePitchesEqual(note1: Note, note2: Note): boolean {\n    return note1.pitch === note2.pitch;\n}\n\nexport function areAccidentalsEqual(note1: Note, note2: Note): boolean {\n    return note1.accidental === note2.accidental;\n}\n\nexport function previousPitch(pitch: Pitch): Pitch {\n    const previousPitchIndex = (PITCHES.indexOf(pitch) + PITCHES.length - 1) % PITCHES.length;\n    return PITCHES[previousPitchIndex];\n}\n\nexport function nextPitch(pitch: Pitch): Pitch {\n    const nextPitchIndex = (PITCHES.indexOf(pitch) + 1) % PITCHES.length;\n    return PITCHES[nextPitchIndex];\n}\n\nexport function normalizeAccidentals(note: Note, preferredAccidental: Accidental = SHARP_ACCIDENTAL): Note {\n    if (preferredAccidental === FLAT_ACCIDENTAL) {\n        if (note.accidental === SHARP_ACCIDENTAL) {\n            return {\n                pitch: nextPitch(note.pitch),\n                accidental: note.pitch === 'B' || note.pitch === 'E' ? NATURAL_ACCIDENTAL : FLAT_ACCIDENTAL\n            };\n        } else if (note.accidental === FLAT_ACCIDENTAL) {\n            if (note.pitch === 'C' || note.pitch === 'F') {\n                return {\n                    pitch: previousPitch(note.pitch),\n                    accidental: NATURAL_ACCIDENTAL\n                };\n            }\n        }\n    } else {\n        if (note.accidental === FLAT_ACCIDENTAL) {\n            return {\n                pitch: previousPitch(note.pitch),\n                accidental: note.pitch === 'C' || note.pitch === 'F' ? NATURAL_ACCIDENTAL : SHARP_ACCIDENTAL\n            };\n        } else if (note.accidental === SHARP_ACCIDENTAL) {\n            if (note.pitch === 'B' || note.pitch === 'E') {\n                return {\n                    pitch: nextPitch(note.pitch),\n                    accidental: NATURAL_ACCIDENTAL\n                };\n            }\n        }\n    }\n    return note;\n}\n\nexport function areNotesEqual(note1: Note, note2: Note): boolean {\n    const onlySharpNote1 = normalizeAccidentals(note1);\n    const onlySharpNote2 = normalizeAccidentals(note2);\n    return arePitchesEqual(onlySharpNote1, onlySharpNote2) && areAccidentalsEqual(onlySharpNote1, onlySharpNote2);\n}\n\nexport function areNoteArraysEqual(notes1: Note[], notes2: Note[]): boolean {\n    if (notes1.length !== notes2.length) {\n        return false;\n    }\n    return !notes1.map((note1: Note, noteIndex: number) => {\n        const note2 = notes2[noteIndex];\n        return areNotesEqual(note1, note2);\n    }).some(comparison => !comparison);\n}","import type {Note} from './note';\nimport {\n    FLAT_ACCIDENTAL,\n    NATURAL_ACCIDENTAL,\n    note,\n    SHARP_ACCIDENTAL\n} from './note';\nimport type {Key} from './key';\n\nexport type MajorMinorPerfectInterval =\n    'P1' // perfect unison\n    | 'm2' // minor second\n    | 'M2' // major second\n    | 'm3' // minor third\n    | 'M3' // major third\n    | 'P4' // perfect fourth\n    | 'P5' // perfect fifth\n    | 'm6' // minor sixth\n    | 'M6' // major sixth\n    | 'm7' // minor seventh\n    | 'M7' // major seventh\n    | 'P8'; // perfect octave\n\nexport type AugmentedDiminishedInterval =\n    'd2' // diminished second\n    | 'A1' // augmented unison\n    | 'd3' // diminished third\n    | 'A2' // augmented second\n    | 'd4' // diminished fourth\n    | 'A3' // augmented third\n    | 'd5' // diminished fifth (=A4)\n    | 'A4' // augmented forth (=d5)\n    | 'd6' // diminished sixth\n    | 'A5' // augmented fifth\n    | 'd7' // diminished seventh\n    | 'A6' // augmented sixth\n    | 'd8' // diminished octave\n    | 'A7';\n\nexport type AlternativeInterval =\n    'semitone'\n    | 'half tone'\n    | 'half step'\n    | 'tone'\n    | 'whole tone'\n    | 'whole step'\n    | 'tritone';\n\nexport type StepInterval = 'H' | 'W';\n\nexport type Interval = MajorMinorPerfectInterval | AugmentedDiminishedInterval | AlternativeInterval | StepInterval;\n\nexport const MAJOR_MINOR_PERFECT_INTERVALS: MajorMinorPerfectInterval[] = [\n    'P1',\n    'm2',\n    'M2',\n    'm3',\n    'M3',\n    'P4',\n    'P5',\n    'm6',\n    'M6',\n    'm7',\n    'M7',\n    'P8'\n];\n\nexport const AUGMENTED_DIMINISHED_INTERVALS: AugmentedDiminishedInterval[] = [\n    'd2',\n    'A1',\n    'd3',\n    'A2',\n    'd4',\n    'A3',\n    'd5',\n    'A4',\n    'd6',\n    'A5',\n    'd7',\n    'A6',\n    'd8',\n    'A7'\n];\n\nexport const SEMITONE: AlternativeInterval = 'semitone';\nexport const WHOLE_TONE: AlternativeInterval = 'whole tone';\n\nexport const WHOLE_STEP: StepInterval = 'W';\nexport const HALF_STEP: StepInterval = 'H';\n\nexport const AUGMENTED_SECOND: AugmentedDiminishedInterval = 'A2';\n\nexport const INTERVAL_SEMITONE_MAP: {[Interval]: number} = {\n    'P1': 0,\n    'd2': 0,\n\n    'm2': 1,\n    'A1': 1,\n    'semitone': 1,\n    'half tone': 1,\n    'half step': 1,\n    'H': 1,\n\n    'M2': 2,\n    'd3': 2,\n    'tone': 2,\n    'whole tone': 2,\n    'whole step': 2,\n    'W': 2,\n\n    'm3': 3,\n    'A2': 3,\n\n    'M3': 4,\n    'd4': 4,\n\n    'P4': 5,\n    'A3': 5,\n\n    'd5': 6,\n    'A4': 6,\n    'tritone': 6,\n\n    'P5': 7,\n    'd6': 7,\n\n    'm6': 8,\n    'A5': 8,\n\n    'M6': 9,\n    'd7': 9,\n\n    'm7': 10,\n    'A6': 10,\n\n    'M7': 11,\n    'd8': 11,\n\n    'P8': 12,\n    'A7': 12\n};\n\nconst NEXT_SEMITONE_MAP = {\n    'A': {\n        [FLAT_ACCIDENTAL]: note('A'),\n        [NATURAL_ACCIDENTAL]: note('A', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('B')\n    },\n    'B': {\n        [FLAT_ACCIDENTAL]: note('B'),\n        [NATURAL_ACCIDENTAL]: note('C'),\n        [SHARP_ACCIDENTAL]: note('C', SHARP_ACCIDENTAL)\n    },\n    'C': {\n        [FLAT_ACCIDENTAL]: note('C'),\n        [NATURAL_ACCIDENTAL]: note('C', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('D')\n    },\n    'D': {\n        [FLAT_ACCIDENTAL]: note('D'),\n        [NATURAL_ACCIDENTAL]: note('D', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('E')\n    },\n    'E': {\n        [FLAT_ACCIDENTAL]: note('E'),\n        [NATURAL_ACCIDENTAL]: note('F'),\n        [SHARP_ACCIDENTAL]: note('F', SHARP_ACCIDENTAL)\n    },\n    'F': {\n        [FLAT_ACCIDENTAL]: note('F'),\n        [NATURAL_ACCIDENTAL]: note('F', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('G')\n    },\n    'G': {\n        [FLAT_ACCIDENTAL]: note('G'),\n        [NATURAL_ACCIDENTAL]: note('G', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('A')\n    }\n};\n\nexport function addInterval(n: Note, interval: Interval | number): Note {\n    const numberOfSemitones = typeof interval === 'number'\n        ? interval\n        : INTERVAL_SEMITONE_MAP[interval];\n\n    let augmentedNote = n;\n    for (let augmentedSemitones = 0; augmentedSemitones < numberOfSemitones; augmentedSemitones++) {\n        augmentedNote = NEXT_SEMITONE_MAP[augmentedNote.pitch][augmentedNote.accidental];\n    }\n\n    return augmentedNote;\n}\n\nexport function relativeIntervalsToRootIntervals(root: Key,\n    relativeIntervals: Interval[],\n    intervalNames: Interval[] = MAJOR_MINOR_PERFECT_INTERVALS): Interval[] {\n    let semitonesToRoot = -1;\n    return relativeIntervals.reduce((intervals: Interval[], relativeInterval: Interval) => {\n        semitonesToRoot += INTERVAL_SEMITONE_MAP[relativeInterval];\n        return [...intervals, intervalNames[semitonesToRoot]];\n    }, []);\n}","import type {Note} from './note';\nimport {\n    normalizeAccidentals,\n    noteToString\n} from './note';\nimport type {Interval} from './interval';\nimport {\n    addInterval,\n    AUGMENTED_SECOND,\n    HALF_STEP,\n    WHOLE_STEP\n} from './interval';\n\nexport type ScaleConstruction = Interval[];\nexport type ChurchMode = 'ionian' | 'dorian' | 'phrygian' | 'lydian' | 'mixolydian' | 'aeolian' | 'locrian';\nexport type HarmonicMinorMode =\n    'harmonic minor'\n    | 'locrian ♯6'\n    | 'ionian ♯5'\n    | 'dorian ♯4'\n    | 'phrygian dominant'\n    | 'lydian ♯2'\n    | 'superlocrian';\nexport type MelodicMinorMode =\n    'melodic minor'\n    | 'dorian ♭2'\n    | 'lydian ♯5'\n    | 'lydian ♭7'\n    | 'mixolydian ♭6'\n    | 'locrian ♯2'\n    | 'superlocrian';\nexport type Mode = ChurchMode | HarmonicMinorMode | MelodicMinorMode;\nexport type Scale = {\n    name: 'major' | 'minor' | 'harmonic minor',\n    construction: ScaleConstruction,\n    modes: Mode[]\n};\nexport type Key = {\n    root: Note,\n    scale: Scale,\n    mode: Mode\n};\nexport const MAJOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP\n];\nexport const MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP\n];\nexport const HARMONIC_MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    AUGMENTED_SECOND,\n    HALF_STEP\n];\nexport const MELODIC_MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP\n];\n\nexport const CHURCH_MODES: ChurchMode[] = ['ionian',\n    'dorian',\n    'phrygian',\n    'lydian',\n    'mixolydian',\n    'aeolian',\n    'locrian'];\nexport const HARMONIC_MINOR_MODES: HarmonicMinorMode[] = [\n    'harmonic minor',\n    'locrian ♯6',\n    'ionian ♯5',\n    'dorian ♯4',\n    'phrygian dominant',\n    'lydian ♯2',\n    'ultralocrian'\n];\nexport const MELODIC_MINOR_MODES: MelodicMinorMode[] = [\n    'melodic minor',\n    'dorian ♭2',\n    'lydian ♯5',\n    'lydian ♭7',\n    'mixolydian ♭6',\n    'locrian ♯2',\n    'superlocrian'\n];\n\nexport const HARMONIC_MINOR_SCALE = {\n    name: 'harmonic minor',\n    construction: HARMONIC_MINOR_CONSTRUCTION,\n    modes: HARMONIC_MINOR_MODES\n};\nexport const MELODIC_MINOR_SCALE = {\n    name: 'melodic minor',\n    construction: MELODIC_MINOR_CONSTRUCTION,\n    modes: MELODIC_MINOR_MODES\n};\nexport const CHURCH_SCALES: Scale[] = [\n    {name: 'major', construction: MAJOR_CONSTRUCTION, modes: CHURCH_MODES},\n    {name: 'minor', construction: MINOR_CONSTRUCTION, modes: CHURCH_MODES}\n];\n\nexport function modeToString(mode: Mode, scale: Scale): string {\n    let scaleIndex = scale.modes.indexOf(mode);\n    return scaleIndex === 0 ? '' : `${mode} (mode ${scaleIndex + 1} of ${scale.name})`;\n}\n\nexport function scaleToString(scale: Scale): string {\n    return scale.name;\n}\n\nexport function keyToString(key: Key): string {\n    return `${noteToString(key.root)} ${scaleToString(key.scale)} ${modeToString(key.mode, key.scale)}`.trim();\n}\n\nexport function applyModeToConstruction(scale: Scale, mode: Mode): ScaleConstruction {\n    return _rotateArray(scale.construction, scale.modes.indexOf(mode));\n}\n\nexport function keyToNotes(key: Key): Note[] {\n    return [...applyModeToConstruction(key.scale, key.mode).slice(0, -1).reduce((notes: Note[], interval: Interval) => {\n        const previousNote = notes[notes.length - 1];\n        const currentNote = addInterval(previousNote, interval);\n        return [...notes, normalizeAccidentals(currentNote, key.root.accidental)];\n    }, [key.root]), key.root];\n}\n\nfunction _rotateArray<T>(array: T[], rotateByOffset: number) {\n    const length = array.length;\n    return array.map((element: T, index: number) => array[(((rotateByOffset + index) % length) + length) % length]);\n}\n","// @flow\nimport React from 'react';\nimport type {Accidental} from '../../music/note';\n\ntype AccidentalChangeHandler = (noteIndex: number, accidental: Accidental) => void;\n\ntype Props = {\n    accidental: Accidental,\n    accidentalIndex: number,\n    isCurrentAccidental: boolean,\n    isRoot: boolean,\n    noteIndex: number,\n    onChange: AccidentalChangeHandler\n};\n\nexport default function AccidentalInput(props: Props) {\n    const {accidental, accidentalIndex, isCurrentAccidental, isRoot, noteIndex, onChange} = props;\n    const accidentalKey = `note-${noteIndex}-accidental-${accidentalIndex}`;\n    return (\n        <div className=\"scaleQuestion__accidental\">\n            <label\n                htmlFor={accidentalKey}>\n                <input\n                    type=\"radio\"\n                    id={accidentalKey}\n                    name={accidentalKey}\n                    value={accidental}\n                    checked={isCurrentAccidental}\n                    onChange={_createHandleAccidentalChange(noteIndex, accidental, onChange)}\n                    disabled={isRoot}\n                />\n                {accidental}\n            </label>\n        </div>\n    );\n}\n\nfunction _createHandleAccidentalChange(noteIndex: number, accidental: Accidental, onChange: AccidentalChangeHandler) {\n    return () => {\n        onChange(noteIndex, accidental);\n    };\n}","// @flow\nimport React from 'react';\nimport type {\n    Accidental,\n    Note,\n    Pitch\n} from '../../music/note';\nimport {\n    ACCIDENTALS,\n    PITCHES\n} from '../../music/note';\nimport AccidentalInput from '../AccidentalInput/AccidentalInput';\n\ntype NoteInputChangeHandler = (noteIndex: number, note: Note) => void;\n\ntype Props = {\n    isRoot: boolean,\n    note: Note,\n    noteIndex: number,\n    onChange: NoteInputChangeHandler\n};\n\nexport default function NoteInput(props: Props) {\n    const {isRoot, noteIndex, onChange, note} = props;\n    return (\n        <div className=\"scaleQuestion__note\" key={`note-${noteIndex}`}>\n            <div className=\"scaleQuestion__pitch\">\n                <input\n                    type=\"text\"\n                    name={`note-${noteIndex}-pitch`}\n                    value={note.pitch || ''}\n                    disabled={isRoot}\n                    tabIndex={noteIndex}\n                    autoFocus={noteIndex === 1}\n                    onChange={_createHandlePitchChange(noteIndex, note.accidental, onChange)}\n                    maxLength={1}\n                />\n            </div>\n            <div className=\"scaleQuestion__accidentals\">\n                {ACCIDENTALS.map((accidental: Accidental, accidentalIndex: number) => (\n                    <AccidentalInput\n                        key={`note-${noteIndex}-accidental-${accidentalIndex}`}\n                        accidental={accidental}\n                        accidentalIndex={accidentalIndex}\n                        isCurrentAccidental={note.accidental === accidental}\n                        isRoot={isRoot}\n                        noteIndex={noteIndex}\n                        onChange={_createHandleAccidentalChange(noteIndex, note.pitch, accidental, onChange)}/>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction _createHandlePitchChange(noteIndex: number, accidental: Accidental, onChange: NoteInputChangeHandler) {\n    return (e: any) => {\n        e.preventDefault();\n        const note = {\n            pitch: _toPitch(e.target.value.toUpperCase()),\n            accidental\n        };\n        onChange(noteIndex, note);\n    };\n}\n\nfunction _createHandleAccidentalChange(noteIndex: number,\n    pitch: Pitch,\n    accidental: Accidental,\n    onChange: NoteInputChangeHandler) {\n    return () => {\n        const note = {\n            accidental,\n            pitch\n        };\n        onChange(noteIndex, note);\n    };\n}\n\nfunction _toPitch(value: string): Pitch | '' {\n    const pitchCandidate: any = value.toUpperCase();\n    return PITCHES.includes(pitchCandidate)\n        ? pitchCandidate\n        : '';\n}","// @flow\nimport React, {Component} from 'react';\nimport type {ScaleQuestion} from '../../music/question';\nimport type {Key} from '../../music/key';\nimport {\n    applyModeToConstruction,\n    keyToNotes,\n    keyToString\n} from '../../music/key';\nimport type {Note} from '../../music/note';\nimport {\n    ACCIDENTALS,\n    areNoteArraysEqual,\n    NATURAL_ACCIDENTAL,\n    noteToString,\n    PITCHES\n} from '../../music/note';\nimport './ScaleQuestion.scss';\nimport {\n    AUGMENTED_DIMINISHED_INTERVALS,\n    relativeIntervalsToRootIntervals\n} from '../../music/interval';\nimport NoteInput from '../NoteInput/NoteInput';\n\ntype Props = {\n    question: ScaleQuestion,\n    onNextClick: () => void\n}\n\ntype State = {\n    notes: {[number]: $Shape<Note>},\n    isAnswered: boolean,\n    isCorrect: boolean,\n    showHint: boolean,\n    hintIndex: number\n}\n\nconst DEFAULT_NOTE: $Shape<Note> = {\n    accidental: NATURAL_ACCIDENTAL\n};\n\nexport default class ScaleQuestionComponent extends Component<Props, State> {\n    state = {\n        notes: {},\n        isAnswered: false,\n        isCorrect: false,\n        showHint: false\n    };\n\n    get _canBeAnswered(): boolean {\n        const noteIndices = Object.keys(this.state.notes);\n        const numberOfNotes = noteIndices.length;\n        const requiredNumberOfAnswers = this.props.question.key.scale.construction.length - 1;\n        const areAllNotesComplete = noteIndices.some(noteIndex => {\n            const note = this.state.notes[noteIndex];\n            return note.pitch && PITCHES.includes(note.pitch)\n                && note.accidental && ACCIDENTALS.includes(note.accidental);\n        });\n        return numberOfNotes === requiredNumberOfAnswers && areAllNotesComplete;\n    }\n\n    _handleAnswer = (e: any) => {\n        e.preventDefault();\n        if (this._canBeAnswered) {\n            this.setState(_setAnswered());\n        }\n    };\n\n    _handleHintClick = (e: any) => {\n        e.preventDefault();\n        this.setState(_showHint());\n    };\n\n    _handleNextClick = (e: any) => {\n        e.preventDefault();\n        this.props.onNextClick();\n    };\n\n    _handleNoteChange = (noteIndex: number, note: Note) => {\n        this.setState(_updateNote(noteIndex, note));\n    };\n\n    _getNote(key: Key, noteIndex: number): $Shape<Note> {\n        if (_isRoot(noteIndex)) {\n            return key.root;\n        }\n        return this.state.notes[noteIndex] ? this.state.notes[noteIndex] : DEFAULT_NOTE;\n    }\n\n    renderScaleInputs(key: Key) {\n        const numberOfNotes = key.scale.construction.length + 1;\n        return (\n            <div className=\"scaleQuestion__notes\">\n                {_range(numberOfNotes).map(noteIndex => {\n                    return (\n                        <NoteInput\n                            key={`note-${noteIndex}`}\n                            isRoot={_isRoot(noteIndex)}\n                            noteIndex={noteIndex}\n                            onChange={this._handleNoteChange}\n                            note={this._getNote(key, noteIndex)}/>\n                    );\n                })}\n                {/*\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                */}\n            </div>\n        );\n    }\n\n    renderHint(key: Key) {\n        const scaleConstruction = applyModeToConstruction(key.scale, key.mode);\n        const hints = [\n            relativeIntervalsToRootIntervals(key.root, scaleConstruction).join(' '),\n            relativeIntervalsToRootIntervals(key.root, scaleConstruction, AUGMENTED_DIMINISHED_INTERVALS).join(' '),\n            scaleConstruction.join('-')\n        ];\n        return (\n            <div className=\"scaleQuestion__hint\">\n                <h1>Hint</h1>\n                <p>{hints[this.state.hintIndex]}</p>\n            </div>\n        );\n    }\n\n    renderSolution(key: Key) {\n        const notes = keyToNotes(key);\n        const modifier = this.state.isCorrect ? 'correct' : 'wrong';\n        const className = `scaleQuestion__solution scaleQuestion__solution--${modifier}`;\n        return (\n            <div className={className}>\n                <h1>Solution</h1>\n                {this.state.isCorrect\n                    ? <p>Your solution is correct!</p>\n                    : <p>Sorry, that's not correct.</p>}\n                <p>{notes.map(noteToString).join(', ')}</p>\n            </div>\n        );\n    }\n\n    render() {\n        const key = this.props.question.key;\n        return (\n            <div className=\"scaleQuestion\">\n                <p>Complete this scale:</p>\n                <h1>{keyToString(key)}</h1>\n                <form onSubmit={this._handleAnswer}>\n                    {this.renderScaleInputs(key)}\n                    <button\n                        onClick={this._handleAnswer}\n                        disabled={!this._canBeAnswered && !this.state.isAnswered}>\n                        Answer\n                    </button>\n                    <button\n                        onClick={this._handleHintClick}>\n                        Hint\n                    </button>\n                    <button onClick={this._handleNextClick}>Next</button>\n                    {this.state.showHint && this.renderHint(key)}\n                    {this.state.isAnswered && this.renderSolution(key)}\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction _updateNote(noteIndex: number, note: Note) {\n    return (state: State) => {\n        return {\n            ...state,\n            notes: {\n                ...state.notes,\n                [noteIndex]: note\n            }\n        };\n    };\n}\n\nfunction _setAnswered() {\n    return (state: State, props: Props) => {\n        const actualNotes = keyToNotes(props.question.key);\n        const root = actualNotes[0];\n        const notes = Object.keys(state.notes).map(noteIndex => state.notes[noteIndex]);\n        const answeredNotes = [root, ...notes, root];\n        return {\n            ...state,\n            isAnswered: true,\n            isCorrect: areNoteArraysEqual(actualNotes, answeredNotes)\n        };\n    };\n}\n\nfunction _showHint() {\n    return (state: State) => ({\n        ...state,\n        showHint: true,\n        hintIndex: _getRandomInt(0, 2, state.hintIndex)\n    });\n}\n\nfunction _range(length: number): number[] {\n    return Array.from(Array(length).keys());\n}\n\nfunction _getRandomInt(min: number, max: number, exclude: number = min - 1): number {\n    const randomInt = Math.floor(Math.random() * (max - min + 1)) + min;\n    if (randomInt === exclude) {\n        return _getRandomInt(min, max, exclude);\n    }\n    return randomInt;\n}\n\nfunction _isRoot(noteIndex: number): boolean {\n    return noteIndex === 0 || noteIndex === 7;\n}","import type {Question} from './question';\nimport type {Note} from './note';\nimport {\n    ACCIDENTALS,\n    areNotesEqual,\n    FLAT_ACCIDENTAL,\n    note,\n    PITCHES,\n    SHARP_ACCIDENTAL\n} from './note';\nimport type {\n    Key,\n    Mode,\n    Scale\n} from './key';\nimport {\n    CHURCH_SCALES,\n    HARMONIC_MINOR_SCALE,\n    MELODIC_MINOR_SCALE\n} from './key';\n\nexport const IGNORED_NOTES: Note = [\n    note('B', SHARP_ACCIDENTAL),\n    note('C', FLAT_ACCIDENTAL),\n    note('E', SHARP_ACCIDENTAL),\n    note('F', FLAT_ACCIDENTAL)\n];\n\nexport function getRandomKey(includeModes: boolean, includeHarmonicMinor: boolean, includeMelodicMinor: boolean): Key {\n    const scale = getRandomScale(includeHarmonicMinor, includeMelodicMinor);\n    const mode = includeModes ? getRandomMode(scale) : scale.modes[0];\n    return {\n        root: getRandomNote(),\n        scale,\n        mode\n    };\n}\n\nexport function getRandomScale(includeHarmonicMinor: boolean, includeMelodicMinor: boolean): Scale {\n    let scales = CHURCH_SCALES;\n    if (includeHarmonicMinor) {\n        scales = [...scales, HARMONIC_MINOR_SCALE];\n    }\n    if (includeMelodicMinor) {\n        scales = [...scales, MELODIC_MINOR_SCALE];\n    }\n    return getRandomArrayElement(scales);\n}\n\nexport function getRandomMode(scale: Scale): Mode {\n    return getRandomArrayElement(scale.modes);\n}\n\nexport function getRandomQuestion(includeModes: boolean,\n    includeHarmonicMinor: boolean,\n    includeMelodicMinor: boolean): Question {\n    const key = getRandomKey(includeModes, includeHarmonicMinor, includeMelodicMinor);\n    return {\n        type: 'scale',\n        key\n    };\n}\n\nexport function getRandomArrayElement<T>(array: T[]): T {\n    return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function isIgnoredNote(n: Note): boolean {\n    return !IGNORED_NOTES.map((ignoredNote: Note) => areNotesEqual(ignoredNote, n)).some(comparison => !comparison);\n}\n\nexport function getRandomNote(): Note {\n    const note = {\n        pitch: getRandomArrayElement(PITCHES),\n        accidental: getRandomArrayElement(ACCIDENTALS)\n    };\n    if (isIgnoredNote(note)) {\n        return getRandomNote();\n    }\n    return note;\n}","// @flow\nimport React, {Component} from 'react';\nimport ScaleQuestion from './components/ScaleQuestion/ScaleQuestion';\nimport {getRandomQuestion} from './music/random';\nimport type {Question} from './music/question';\nimport './ScaleTrainer.scss';\nimport {keyToString} from './music/key';\n\ntype State = {\n    question: ?Question,\n    includeModes: boolean,\n    includeHarmonicMinor: boolean,\n    includeMelodicMinor: boolean\n};\n\nexport default class ScaleTrainer extends Component<void, State> {\n    state = {\n        question: undefined,\n        includeModes: _getBooleanFromLocalStorage('includeModes'),\n        includeHarmonicMinor: _getBooleanFromLocalStorage('includeHarmonicMinor'),\n        includeMelodicMinor: _getBooleanFromLocalStorage('includeMelodicMinor')\n    };\n\n    componentWillMount() {\n        this._updateQuestion();\n    }\n\n    _handleNextClick = () => {\n        this._updateQuestion();\n    };\n\n    _handleOptionChange = (e: any) => {\n        const option = e.target.value;\n        const value = !this.state[option];\n        this.setState({\n            [option]: value\n        }, this._updateQuestion);\n        localStorage.setItem(option, value);\n    };\n\n    _updateQuestion = () => {\n        this.setState(state => ({\n            question: getRandomQuestion(state.includeModes, state.includeHarmonicMinor, state.includeMelodicMinor)\n        }));\n    };\n\n    renderOptions() {\n        return (\n            <div className=\"scaleTrainer__options\">\n                <label htmlFor=\"includeModes\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"includeModes\"\n                        name=\"includeModes\"\n                        value=\"includeModes\"\n                        checked={this.state.includeModes}\n                        onChange={this._handleOptionChange}/>\n                    Modes\n                </label>\n                <label htmlFor=\"includeHarmonicMinor\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"includeHarmonicMinor\"\n                        name=\"includeHarmonicMinor\"\n                        value=\"includeHarmonicMinor\"\n                        checked={this.state.includeHarmonicMinor}\n                        onChange={this._handleOptionChange}/>\n                    Harmonic Minor\n                </label>\n                <label htmlFor=\"includeMelodicMinor\">\n                    <input\n                        type=\"checkbox\"\n                        id=\"includeMelodicMinor\"\n                        name=\"includeMelodicMinor\"\n                        value=\"includeMelodicMinor\"\n                        checked={this.state.includeMelodicMinor}\n                        onChange={this._handleOptionChange}/>\n                    Melodic Minor\n                </label>\n            </div>\n        );\n    }\n\n    render() {\n        const question = this.state.question;\n        return (\n            <>\n                {this.renderOptions()}\n                {question && question.type === 'scale'\n                    ? <ScaleQuestion key={_questionToString(question)} question={question}\n                        onNextClick={this._handleNextClick}/>\n                    : <div>Loading...</div>}\n            </>\n        );\n    }\n}\n\nfunction _questionToString(question: Question): string {\n    return `${question.type}${keyToString(question.key)}`;\n}\n\nfunction _getBooleanFromLocalStorage(key: string, defaultValue = true): boolean {\n    const value = localStorage.getItem(key);\n    if (typeof value === 'undefined') {\n        return defaultValue;\n    }\n    return value === 'true';\n}","import React, {Component} from 'react';\nimport './App.scss';\nimport ScaleTrainer from './ScaleTrainer';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <ScaleTrainer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}