{"version":3,"sources":["music/note.js","music/interval.js","music/mode.js","music/scale.js","music/key.js","components/AccidentalInput/AccidentalInput.jsx","components/NoteInput/NoteInput.jsx","components/ScaleQuestion/ScaleQuestion.jsx","music/random.js","ScaleTrainer.jsx","App.js","serviceWorker.js","index.js"],"names":["PITCHES","NATURAL_ACCIDENTAL","FLAT_ACCIDENTAL","ACCIDENTALS","Note","pitch","accidental","Object","classCallCheck","this","createClass","key","value","note","onlySharpNote1","normalizeAccidentals","onlySharpNote2","hasEqualPitch","hasEqualAccidental","arguments","length","undefined","createNote","nextPitch","previousPitch","noteToString","accidentalToString","notes1","notes2","map","note1","noteIndex","note2","equals","some","comparison","previousPitchIndex","indexOf","nextPitchIndex","MAJOR_MINOR_PERFECT_INTERVALS","AUGMENTED_DIMINISHED_INTERVALS","INTERVAL_SEMITONE_MAP","P1","d2","m2","A1","semitone","half tone","half step","H","M2","d3","tone","whole tone","whole step","W","m3","A2","M3","d4","P4","A3","d5","A4","tritone","P5","d6","m6","A5","M6","d7","m7","A6","M7","d8","P8","A7","NEXT_SEMITONE_MAP","A","_A","defineProperty","B","_B","C","_C","D","_D","E","_E","F","_F","G","_G","relativeIntervalsToRootIntervals","root","relativeIntervals","intervalNames","semitonesToRoot","reduce","intervals","relativeInterval","toConsumableArray","concat","CHURCH_MODES","NO_MODES","Scale","name","construction","modes","MAJOR_CONSTRUCTION","MINOR_CONSTRUCTION","MELODIC_MINOR_CONSTRUCTION","CHROMATIC_CONSTRUCTION","AUGMENTED_CONSTRUCTION","MAJOR_BLUES_CONSTRUCTION","MINOR_BLUES_CONSTRUCTION","MAJOR_PENTATONIC_CONSTRUCTION","MINOR_PENTATONIC_CONSTRUCTION","HARMONIC_MINOR_SCALE","MELODIC_MINOR_SCALE","MAJOR_SCALE","MINOR_SCALE","CHROMATIC_SCALE","AUGMENTED_SCALE","MAJOR_BLUES_SCALE","MINOR_BLUES_SCALE","MAJOR_PENTATONIC_SCALE","MINOR_PENTATONIC_SCALE","SCALES","getScaleByName","scaleName","find","scale","Key","mode","_this","modeConstruction","slice","notes","interval","currentNote","n","numberOfSemitones","augmentedNote","augmentedSemitones","addInterval","modeName","trim","get","scaleIndex","array","rotateByOffset","element","index","_rotateArray","AccidentalInput","props","accidentalIndex","isCurrentAccidental","isRoot","onChange","accidentalKey","react_default","a","createElement","className","htmlFor","type","id","checked","_createHandleAccidentalChange","disabled","NoteInput","showError","tabIndex","autoFocus","e","preventDefault","pitchCandidate","toUpperCase","includes","_toPitch","target","_createHandlePitchChange","maxLength","DEFAULT_NOTE","ScaleQuestionComponent","state","correctNotes","isAnswered","isCorrect","showErrors","showHint","_handleAnswer","_canBeAnswered","setState","actualNotes","question","toNotes","keys","answeredNotes","objectSpread","areNoteArraysEqual","_handleHintClick","hintIndex","_getRandomInt","min","max","exclude","randomInt","Math","floor","random","_handleNextClick","onNextClick","_handleNoteChange","_updateNote","_isRoot","_this2","numberOfNotes","Array","from","_getNote","showNotes","react_fretboard_default","skinType","selectedNotes","_noteToSimpleNotation","showSelectionLabels","scaleConstruction","hints","join","renderFretboard","modifier","answerDisabled","hintDisabled","Fragment","onClick","_handleyHintClick","String","onSubmit","renderScaleInputs","renderActions","renderHint","renderSolution","_this3","noteIndices","requiredNumberOfAnswers","areAllNotesComplete","Component","IGNORED_NOTES","getRandomKey","includeAccidentals","includeModes","scaleOptions","getRandomArrayElement","scaleNames","_scaleOptionsToScaleNames","getRandomScale","getRandomMode","getRandomNote","ignoredNote","isIgnoredNote","DEFAULT_SCALES","scales","ScaleTrainer","options","_getBooleanFromLocalStorage","defaultValue","localStorage","getItem","JSON","parse","_getObjectFromLocalStorage","_updateQuestion","_handleOptionChange","option","setItem","_updateOption","_handleScaleOptionChange","zeroScalesSelected","s","stringify","_updateScaleOption","onlyMajorScaleSelected","_onlyMajorScaleSelected","renderOptions","ScaleQuestion_ScaleQuestionComponent","_questionToString","numberOfScales","App","ScaleTrainer_ScaleTrainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ee3dda7.chunk.js","sourcesContent":["// @flow\nexport type Pitch = 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G';\nexport type Accidental = '♯' | '♭' | '♮';\n\nexport const PITCHES: Pitch[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\nexport const SHARP_ACCIDENTAL: Accidental = '♯';\nexport const NATURAL_ACCIDENTAL: Accidental = '♮';\nexport const FLAT_ACCIDENTAL: Accidental = '♭';\nexport const ACCIDENTALS: Accidental[] = [FLAT_ACCIDENTAL, SHARP_ACCIDENTAL, NATURAL_ACCIDENTAL];\n\nexport class Note {\n    pitch: Pitch;\n    accidental: Accidental;\n\n    constructor(pitch: Pitch, accidental: Accidental) {\n        this.pitch = pitch;\n        this.accidental = accidental;\n    }\n\n    static accidentalToString(accidental: Accidental): string {\n        return accidental === NATURAL_ACCIDENTAL ? '' : accidental;\n    }\n\n    static noteToString(note: Note): string {\n        return note.pitch + Note.accidentalToString(note.accidental);\n    }\n\n    static areNoteArraysEqual(notes1: Note[], notes2: Note[]): boolean {\n        if (notes1.length !== notes2.length) {\n            return false;\n        }\n        return !notes1.map((note1: Note, noteIndex: number) => {\n            const note2 = notes2[noteIndex];\n            return note1.equals(note2);\n        }).some(comparison => !comparison);\n    }\n\n    equals(note: Note): boolean {\n        const onlySharpNote1 = this.normalizeAccidentals();\n        const onlySharpNote2 = note.normalizeAccidentals();\n        return onlySharpNote1.hasEqualPitch(onlySharpNote2)\n            && onlySharpNote1.hasEqualAccidental(onlySharpNote2);\n    }\n\n    hasEqualPitch(note: Note) {\n        return this.pitch === note.pitch;\n    }\n\n    hasEqualAccidental(note: Note) {\n        return this.accidental === note.accidental;\n    }\n\n    normalizeAccidentals(preferredAccidental: Accidental = SHARP_ACCIDENTAL): Note {\n        if (preferredAccidental === FLAT_ACCIDENTAL) {\n            if (this.accidental === SHARP_ACCIDENTAL) {\n                return createNote(\n                    nextPitch(this.pitch),\n                    this.pitch === 'B' || this.pitch === 'E' ? NATURAL_ACCIDENTAL : FLAT_ACCIDENTAL\n                );\n            } else if (this.accidental === FLAT_ACCIDENTAL) {\n                if (this.pitch === 'C' || this.pitch === 'F') {\n                    return createNote(\n                        previousPitch(this.pitch),\n                        NATURAL_ACCIDENTAL\n                    );\n                }\n            }\n        } else {\n            if (this.accidental === FLAT_ACCIDENTAL) {\n                return createNote(\n                    previousPitch(this.pitch),\n                    this.pitch === 'C' || this.pitch === 'F' ? NATURAL_ACCIDENTAL : SHARP_ACCIDENTAL\n                );\n            } else if (this.accidental === SHARP_ACCIDENTAL) {\n                if (this.pitch === 'B' || this.pitch === 'E') {\n                    return createNote(\n                        nextPitch(this.pitch),\n                        NATURAL_ACCIDENTAL\n                    );\n                }\n            }\n        }\n        return this;\n    }\n\n    toString() {\n        return Note.noteToString(this);\n    }\n}\n\nexport function createNote(pitch: Pitch, accidental: ?Accidental): Note {\n    return new Note(pitch, accidental ? accidental : NATURAL_ACCIDENTAL);\n}\n\nexport function previousPitch(pitch: Pitch): Pitch {\n    const previousPitchIndex = (PITCHES.indexOf(pitch) + PITCHES.length - 1) % PITCHES.length;\n    return PITCHES[previousPitchIndex];\n}\n\nexport function nextPitch(pitch: Pitch): Pitch {\n    const nextPitchIndex = (PITCHES.indexOf(pitch) + 1) % PITCHES.length;\n    return PITCHES[nextPitchIndex];\n}\n","import {\n    createNote,\n    FLAT_ACCIDENTAL,\n    NATURAL_ACCIDENTAL,\n    Note,\n    SHARP_ACCIDENTAL\n} from './note';\nimport {Key} from './key';\n\nexport type MajorMinorPerfectInterval =\n    'P1' // perfect unison\n    | 'm2' // minor second\n    | 'M2' // major second\n    | 'm3' // minor third\n    | 'M3' // major third\n    | 'P4' // perfect fourth\n    | 'P5' // perfect fifth\n    | 'm6' // minor sixth\n    | 'M6' // major sixth\n    | 'm7' // minor seventh\n    | 'M7' // major seventh\n    | 'P8'; // perfect octave\n\nexport type AugmentedDiminishedInterval =\n    'd2' // diminished second\n    | 'A1' // augmented unison\n    | 'd3' // diminished third\n    | 'A2' // augmented second\n    | 'd4' // diminished fourth\n    | 'A3' // augmented third\n    | 'd5' // diminished fifth (=A4)\n    | 'A4' // augmented forth (=d5)\n    | 'd6' // diminished sixth\n    | 'A5' // augmented fifth\n    | 'd7' // diminished seventh\n    | 'A6' // augmented sixth\n    | 'd8' // diminished octave\n    | 'A7';\n\nexport type AlternativeInterval =\n    'semitone'\n    | 'half tone'\n    | 'half step'\n    | 'tone'\n    | 'whole tone'\n    | 'whole step'\n    | 'tritone';\n\nexport type StepInterval = 'H' | 'W';\n\nexport type Interval = MajorMinorPerfectInterval | AugmentedDiminishedInterval | AlternativeInterval | StepInterval;\n\nexport const MAJOR_MINOR_PERFECT_INTERVALS: MajorMinorPerfectInterval[] = [\n    'P1',\n    'm2',\n    'M2',\n    'm3',\n    'M3',\n    'P4',\n    'P5',\n    'm6',\n    'M6',\n    'm7',\n    'M7',\n    'P8'\n];\n\nexport const AUGMENTED_DIMINISHED_INTERVALS: AugmentedDiminishedInterval[] = [\n    'd2',\n    'A1',\n    'd3',\n    'A2',\n    'd4',\n    'A3',\n    'd5',\n    'A4',\n    'd6',\n    'A5',\n    'd7',\n    'A6',\n    'd8',\n    'A7'\n];\n\nexport const SEMITONE: AlternativeInterval = 'semitone';\nexport const WHOLE_TONE: AlternativeInterval = 'whole tone';\n\nexport const WHOLE_STEP: StepInterval = 'W';\nexport const HALF_STEP: StepInterval = 'H';\n\nexport const AUGMENTED_SECOND: AugmentedDiminishedInterval = 'A2';\n\nexport const INTERVAL_SEMITONE_MAP: {[Interval]: number} = {\n    'P1': 0,\n    'd2': 0,\n\n    'm2': 1,\n    'A1': 1,\n    'semitone': 1,\n    'half tone': 1,\n    'half step': 1,\n    'H': 1,\n\n    'M2': 2,\n    'd3': 2,\n    'tone': 2,\n    'whole tone': 2,\n    'whole step': 2,\n    'W': 2,\n\n    'm3': 3,\n    'A2': 3,\n\n    'M3': 4,\n    'd4': 4,\n\n    'P4': 5,\n    'A3': 5,\n\n    'd5': 6,\n    'A4': 6,\n    'tritone': 6,\n\n    'P5': 7,\n    'd6': 7,\n\n    'm6': 8,\n    'A5': 8,\n\n    'M6': 9,\n    'd7': 9,\n\n    'm7': 10,\n    'A6': 10,\n\n    'M7': 11,\n    'd8': 11,\n\n    'P8': 12,\n    'A7': 12\n};\n\nconst NEXT_SEMITONE_MAP = {\n    'A': {\n        [FLAT_ACCIDENTAL]: createNote('A'),\n        [NATURAL_ACCIDENTAL]: createNote('A', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: createNote('B')\n    },\n    'B': {\n        [FLAT_ACCIDENTAL]: createNote('B'),\n        [NATURAL_ACCIDENTAL]: createNote('C'),\n        [SHARP_ACCIDENTAL]: createNote('C', SHARP_ACCIDENTAL)\n    },\n    'C': {\n        [FLAT_ACCIDENTAL]: createNote('C'),\n        [NATURAL_ACCIDENTAL]: createNote('C', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: createNote('D')\n    },\n    'D': {\n        [FLAT_ACCIDENTAL]: createNote('D'),\n        [NATURAL_ACCIDENTAL]: createNote('D', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: createNote('E')\n    },\n    'E': {\n        [FLAT_ACCIDENTAL]: createNote('E'),\n        [NATURAL_ACCIDENTAL]: createNote('F'),\n        [SHARP_ACCIDENTAL]: createNote('F', SHARP_ACCIDENTAL)\n    },\n    'F': {\n        [FLAT_ACCIDENTAL]: createNote('F'),\n        [NATURAL_ACCIDENTAL]: createNote('F', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: createNote('G')\n    },\n    'G': {\n        [FLAT_ACCIDENTAL]: createNote('G'),\n        [NATURAL_ACCIDENTAL]: createNote('G', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: createNote('A')\n    }\n};\n\nexport function addInterval(n: Note, interval: Interval | number): Note {\n    const numberOfSemitones = typeof interval === 'number'\n        ? interval\n        : INTERVAL_SEMITONE_MAP[interval];\n\n    let augmentedNote = n;\n    for (let augmentedSemitones = 0; augmentedSemitones < numberOfSemitones; augmentedSemitones++) {\n        augmentedNote = NEXT_SEMITONE_MAP[augmentedNote.pitch][augmentedNote.accidental];\n    }\n\n    return augmentedNote;\n}\n\nexport function relativeIntervalsToRootIntervals(root: Key,\n    relativeIntervals: Interval[],\n    intervalNames: Interval[] = MAJOR_MINOR_PERFECT_INTERVALS): Interval[] {\n    let semitonesToRoot = -1;\n    return relativeIntervals.reduce((intervals: Interval[], relativeInterval: Interval) => {\n        semitonesToRoot += INTERVAL_SEMITONE_MAP[relativeInterval];\n        return [...intervals, intervalNames[semitonesToRoot]];\n    }, []);\n}","// @flow\n\nexport type HarmonicMinorMode =\n    'harmonic minor'\n    | 'locrian ♯6'\n    | 'ionian ♯5'\n    | 'dorian ♯4'\n    | 'phrygian dominant'\n    | 'lydian ♯2'\n    | 'superlocrian';\nexport type MelodicMinorMode =\n    'melodic minor'\n    | 'dorian ♭2'\n    | 'lydian ♯5'\n    | 'lydian ♭7'\n    | 'mixolydian ♭6'\n    | 'locrian ♯2'\n    | 'superlocrian';\nexport type ChurchMode = 'ionian' | 'dorian' | 'phrygian' | 'lydian' | 'mixolydian' | 'aeolian' | 'locrian';\nexport type Mode = ChurchMode | HarmonicMinorMode | MelodicMinorMode;\n\nexport const CHURCH_MODES: ChurchMode[] = [\n    'ionian',\n    'dorian',\n    'phrygian',\n    'lydian',\n    'mixolydian',\n    'aeolian',\n    'locrian'\n];\n\nexport const HARMONIC_MINOR_MODES: HarmonicMinorMode[] = [\n    'harmonic minor',\n    'locrian ♯6',\n    'ionian ♯5',\n    'dorian ♯4',\n    'phrygian dominant',\n    'lydian ♯2',\n    'ultralocrian'\n];\n\nexport const MELODIC_MINOR_MODES: MelodicMinorMode[] = [\n    'melodic minor',\n    'dorian ♭2',\n    'lydian ♯5',\n    'lydian ♭7',\n    'mixolydian ♭6',\n    'locrian ♯2',\n    'superlocrian'\n];","// @flow\nimport type {Interval} from './interval';\nimport {\n    AUGMENTED_SECOND,\n    HALF_STEP,\n    WHOLE_STEP\n} from './interval';\nimport type {Mode} from './mode';\nimport {\n    CHURCH_MODES,\n    HARMONIC_MINOR_MODES,\n    MELODIC_MINOR_MODES\n} from './mode';\n\nexport type ScaleConstruction = Interval[];\nexport type ScaleName = 'major' | 'minor' | 'harmonic minor';\n\nconst NO_MODES: Mode[] = [];\n\nexport class Scale {\n    name: ScaleName;\n    construction: ScaleConstruction;\n    modes: Mode[];\n\n    constructor(name: ScaleName, construction: ScaleConstruction, modes: Mode[] = NO_MODES) {\n        this.name = name;\n        this.construction = construction;\n        this.modes = modes;\n    }\n\n    toString() {\n        return this.name;\n    }\n}\n\nexport const MAJOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP\n];\n\nexport const MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP\n];\n\nexport const HARMONIC_MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    AUGMENTED_SECOND,\n    HALF_STEP\n];\n\nexport const MELODIC_MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP\n];\n\nexport const CHROMATIC_CONSTRUCTION: ScaleConstruction = [\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    HALF_STEP\n];\n\nexport const AUGMENTED_CONSTRUCTION: ScaleConstruction = [\n    AUGMENTED_SECOND,\n    HALF_STEP,\n    AUGMENTED_SECOND,\n    HALF_STEP,\n    AUGMENTED_SECOND,\n    HALF_STEP\n];\n\nexport const MAJOR_BLUES_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    AUGMENTED_SECOND,\n    WHOLE_STEP,\n    AUGMENTED_SECOND\n];\n\nexport const MINOR_BLUES_CONSTRUCTION: ScaleConstruction = [\n    AUGMENTED_SECOND,\n    WHOLE_STEP,\n    HALF_STEP,\n    HALF_STEP,\n    AUGMENTED_SECOND,\n    HALF_STEP\n];\n\nexport const MAJOR_PENTATONIC_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    WHOLE_STEP,\n    AUGMENTED_SECOND,\n    WHOLE_STEP,\n    AUGMENTED_SECOND\n];\n\nexport const MINOR_PENTATONIC_CONSTRUCTION: ScaleConstruction = [\n    AUGMENTED_SECOND,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    AUGMENTED_SECOND,\n    WHOLE_STEP\n];\n\nexport const HARMONIC_MINOR_SCALE = new Scale('harmonic minor', HARMONIC_MINOR_CONSTRUCTION, HARMONIC_MINOR_MODES);\nexport const MELODIC_MINOR_SCALE = new Scale('melodic minor', MELODIC_MINOR_CONSTRUCTION, MELODIC_MINOR_MODES);\nexport const MAJOR_SCALE = new Scale('major', MAJOR_CONSTRUCTION, CHURCH_MODES);\nexport const MINOR_SCALE = new Scale('minor', MINOR_CONSTRUCTION, CHURCH_MODES);\nexport const CHROMATIC_SCALE = new Scale('chromatic', CHROMATIC_CONSTRUCTION);\nexport const AUGMENTED_SCALE = new Scale('augmented', AUGMENTED_CONSTRUCTION);\nexport const MAJOR_BLUES_SCALE = new Scale('major blues', MAJOR_BLUES_CONSTRUCTION);\nexport const MINOR_BLUES_SCALE = new Scale('minor blues', MINOR_BLUES_CONSTRUCTION);\nexport const MAJOR_PENTATONIC_SCALE = new Scale('major pentatonic', MAJOR_PENTATONIC_CONSTRUCTION);\nexport const MINOR_PENTATONIC_SCALE = new Scale('minor pentatonic', MINOR_PENTATONIC_CONSTRUCTION);\n\nexport const SCALES: Scale[] = [\n    MAJOR_SCALE,\n    MINOR_SCALE,\n    HARMONIC_MINOR_SCALE,\n    MELODIC_MINOR_SCALE,\n    CHROMATIC_SCALE,\n    AUGMENTED_SCALE,\n    MAJOR_BLUES_SCALE,\n    MINOR_BLUES_SCALE,\n    MAJOR_PENTATONIC_SCALE,\n    MINOR_PENTATONIC_SCALE\n];\n\nexport function getScaleByName(scaleName: ScaleName) {\n    return SCALES.find(scale => scale.name === scaleName);\n}","import {Note} from './note';\nimport type {Interval} from './interval';\nimport {addInterval} from './interval';\nimport type {ScaleConstruction} from './scale';\nimport {Scale} from './scale';\nimport type {Mode} from './mode';\n\nexport class Key {\n    root: Note;\n    scale: Scale;\n    mode: ?Mode;\n\n    constructor(root: Note, scale: Scale, mode: Mode) {\n        this.root = root;\n        this.scale = scale;\n        this.mode = mode;\n    }\n\n    get modeName(): string {\n        if (this.scale.modes.length === 0) {\n            return '';\n        }\n        const scaleIndex = this.scale.modes.indexOf(this.mode);\n        return scaleIndex === 0 ? '' : `${this.mode} (mode ${scaleIndex + 1} of ${this.scale.name})`;\n    }\n\n    toNotes(): Note[] {\n        return [...this.modeConstruction.slice(0, -1).reduce((notes: Note[], interval: Interval) => {\n            const previousNote = notes[notes.length - 1];\n            const currentNote = addInterval(previousNote, interval);\n            return [...notes, currentNote.normalizeAccidentals(this.root.accidental)];\n        }, [this.root]), this.root];\n    }\n\n    get modeConstruction(): ScaleConstruction {\n        return this.mode\n            ? _rotateArray(this.scale.construction, this.scale.modes.indexOf(this.mode))\n            : this.scale.construction;\n    }\n\n    toString(): string {\n        return `${this.root} ${this.scale} ${this.modeName}`.trim();\n    }\n}\n\nfunction _rotateArray<T>(array: T[], rotateByOffset: number) {\n    const length = array.length;\n    return array.map((element: T, index: number) => array[(((rotateByOffset + index) % length) + length) % length]);\n}\n","// @flow\nimport React from 'react';\nimport type {Accidental} from '../../music/note';\n\ntype AccidentalChangeHandler = (noteIndex: number, accidental: Accidental) => void;\n\ntype Props = {\n    accidental: Accidental,\n    accidentalIndex: number,\n    isCurrentAccidental: boolean,\n    isRoot: boolean,\n    noteIndex: number,\n    onChange: AccidentalChangeHandler\n};\n\nexport default function AccidentalInput(props: Props) {\n    const {accidental, accidentalIndex, isCurrentAccidental, isRoot, noteIndex, onChange} = props;\n    const accidentalKey = `note-${noteIndex}-accidental-${accidentalIndex}`;\n    return (\n        <div className=\"scaleQuestion__accidental\">\n            <label\n                htmlFor={accidentalKey}>\n                <input\n                    type=\"radio\"\n                    id={accidentalKey}\n                    name={accidentalKey}\n                    value={accidental}\n                    checked={isCurrentAccidental}\n                    onChange={_createHandleAccidentalChange(noteIndex, accidental, onChange)}\n                    disabled={isRoot}\n                />\n                {accidental}\n            </label>\n        </div>\n    );\n}\n\nfunction _createHandleAccidentalChange(noteIndex: number, accidental: Accidental, onChange: AccidentalChangeHandler) {\n    return () => {\n        onChange(noteIndex, accidental);\n    };\n}","// @flow\nimport React from 'react';\nimport type {\n    Accidental,\n    Note,\n    Pitch\n} from '../../music/note';\nimport {\n    ACCIDENTALS,\n    createNote,\n    PITCHES\n} from '../../music/note';\nimport AccidentalInput from '../AccidentalInput/AccidentalInput';\n\ntype NoteInputChangeHandler = (noteIndex: number, note: Note) => void;\n\ntype Props = {\n    isRoot: boolean,\n    note: Note,\n    noteIndex: number,\n    onChange: NoteInputChangeHandler,\n    showError: boolean\n};\n\nexport default function NoteInput(props: Props) {\n    const {isRoot, noteIndex, onChange, note} = props;\n    const className = `scaleQuestion__note${props.showError ? ' scaleQuestion__note--error' : ''}`;\n    return (\n        <div className={className} key={`note-${noteIndex}`}>\n            <div className=\"scaleQuestion__pitch\">\n                <input\n                    type=\"text\"\n                    name={`note-${noteIndex}-pitch`}\n                    value={note.pitch || ''}\n                    disabled={isRoot}\n                    tabIndex={noteIndex}\n                    autoFocus={noteIndex === 1}\n                    onChange={_createHandlePitchChange(noteIndex, note.accidental, onChange)}\n                    maxLength={1}\n                />\n            </div>\n            <div className=\"scaleQuestion__accidentals\">\n                {ACCIDENTALS.map((accidental: Accidental, accidentalIndex: number) => (\n                    <AccidentalInput\n                        key={`note-${noteIndex}-accidental-${accidentalIndex}`}\n                        accidental={accidental}\n                        accidentalIndex={accidentalIndex}\n                        isCurrentAccidental={note.accidental === accidental}\n                        isRoot={isRoot}\n                        noteIndex={noteIndex}\n                        onChange={_createHandleAccidentalChange(noteIndex, note.pitch, accidental, onChange)}/>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction _createHandlePitchChange(noteIndex: number, accidental: Accidental, onChange: NoteInputChangeHandler) {\n    return (e: any) => {\n        e.preventDefault();\n        const note = createNote(\n            _toPitch(e.target.value.toUpperCase()),\n            accidental\n        );\n        onChange(noteIndex, note);\n    };\n}\n\nfunction _createHandleAccidentalChange(noteIndex: number,\n    pitch: Pitch,\n    accidental: Accidental,\n    onChange: NoteInputChangeHandler) {\n    return () => {\n        const note = createNote(\n            pitch,\n            accidental\n        );\n        onChange(noteIndex, note);\n    };\n}\n\nfunction _toPitch(value: string): Pitch | '' {\n    const pitchCandidate: any = value.toUpperCase();\n    return PITCHES.includes(pitchCandidate)\n        ? pitchCandidate\n        : '';\n}","// @flow\nimport React, {Component} from 'react';\nimport type {ScaleQuestion} from '../../music/question';\nimport {Key} from '../../music/key';\nimport {\n    ACCIDENTALS,\n    FLAT_ACCIDENTAL,\n    NATURAL_ACCIDENTAL,\n    Note,\n    PITCHES\n} from '../../music/note';\nimport './ScaleQuestion.scss';\nimport {\n    AUGMENTED_DIMINISHED_INTERVALS,\n    relativeIntervalsToRootIntervals\n} from '../../music/interval';\nimport NoteInput from '../NoteInput/NoteInput';\nimport Fretboard, {scaleNotes} from 'react-fretboard';\n\ntype Props = {\n    question: ScaleQuestion,\n    onNextClick: () => void\n}\n\ntype State = {\n    notes: {[number]: $Shape<Note>},\n    correctNotes: {[number]: boolean},\n    isAnswered: boolean,\n    isCorrect: boolean,\n    showErrors: boolean,\n    showHint: boolean,\n    hintIndex: number\n}\n\nconst DEFAULT_NOTE: $Shape<Note> = {\n    accidental: NATURAL_ACCIDENTAL\n};\n\nexport default class ScaleQuestionComponent extends Component<Props, State> {\n    state = {\n        notes: {},\n        correctNotes: {},\n        isAnswered: false,\n        isCorrect: false,\n        showErrors: false,\n        showHint: false\n    };\n\n    get _canBeAnswered(): boolean {\n        const noteIndices = Object.keys(this.state.notes);\n        const numberOfNotes = noteIndices.length;\n        const requiredNumberOfAnswers = this.props.question.key.scale.construction.length - 1;\n        const areAllNotesComplete = noteIndices.some(noteIndex => {\n            const note = this.state.notes[noteIndex];\n            return note.pitch && PITCHES.includes(note.pitch)\n                && note.accidental && ACCIDENTALS.includes(note.accidental);\n        });\n        return numberOfNotes === requiredNumberOfAnswers && areAllNotesComplete;\n    }\n\n    _handleAnswer = (e: any) => {\n        e.preventDefault();\n        if (this._canBeAnswered) {\n            this.setState(_setAnswered());\n        }\n    };\n\n    _handleHintClick = (e: any) => {\n        e.preventDefault();\n        this.setState(_showHint());\n    };\n\n    _handleNextClick = (e: any) => {\n        e.preventDefault();\n        this.props.onNextClick();\n    };\n\n    _handleNoteChange = (noteIndex: number, note: Note) => {\n        const notes = this.props.question.key.toNotes();\n        this.setState(_updateNote(noteIndex, note, notes[noteIndex].equals(note)));\n    };\n\n    _getNote(key: Key, noteIndex: number): $Shape<Note> {\n        if (_isRoot(key, noteIndex)) {\n            return key.root;\n        }\n        return this.state.notes[noteIndex] ? this.state.notes[noteIndex] : DEFAULT_NOTE;\n    }\n\n    renderScaleInputs(key: Key) {\n        const numberOfNotes = key.scale.construction.length + 1;\n        const notes = key.toNotes();\n        return (\n            <div className=\"scaleQuestion__notes\">\n                {_range(numberOfNotes).map(noteIndex => {\n                    const note = this._getNote(key, noteIndex);\n                    const isRoot = _isRoot(key, noteIndex);\n                    const showError = !isRoot && this.state.showErrors && !this.state.correctNotes[noteIndex];\n                    return (\n                        <NoteInput\n                            key={`note-${noteIndex}`}\n                            isRoot={isRoot}\n                            noteIndex={noteIndex}\n                            onChange={this._handleNoteChange}\n                            note={note}\n                            showError={showError}/>\n                    );\n                })}\n                {/*\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                <div className=\"scaleQuestion__intervalHint\">hint</div>\n                */}\n            </div>\n        );\n    }\n\n    renderFretboard(showNotes: boolean = true) {\n        return (\n            <div className=\"scaleQuestion__fretboard\">\n                <Fretboard\n                    skinType=\"strings\"\n                    selectedNotes={this.props.question.key.toNotes().map(_noteToSimpleNotation)}\n                    showSelectionLabels={showNotes}/>\n            </div>\n        );\n    }\n\n    renderHint(key: Key) {\n        const scaleConstruction = key.modeConstruction;\n        const hints = [\n            relativeIntervalsToRootIntervals(key.root, scaleConstruction).join(' '),\n            relativeIntervalsToRootIntervals(key.root, scaleConstruction, AUGMENTED_DIMINISHED_INTERVALS).join(' '),\n            scaleConstruction.join('-')\n        ];\n        return (\n            <div className=\"scaleQuestion__hint\">\n                <h1>Hint</h1>\n                <p>{hints[this.state.hintIndex]}</p>\n                {this.renderFretboard(false)}\n            </div>\n        );\n    }\n\n    renderSolution(key: Key) {\n        const notes = key.toNotes();\n        const modifier = this.state.isCorrect ? 'correct' : 'wrong';\n        const className = `scaleQuestion__solution scaleQuestion__solution--${modifier}`;\n        return (\n            <div className={className}>\n                <h1>{this.state.isCorrect ? 'Awesome!' : 'Wrong'}</h1>\n                <p>{this.state.isCorrect\n                    ? 'Your solution is correct!'\n                    : `This would have been the correct answer: ${notes.map(Note.noteToString).join(' ')}`}</p>\n                {this.renderFretboard()}\n            </div>\n        );\n    }\n\n    renderActions() {\n        const answerDisabled = !this._canBeAnswered && !this.state.isAnswered;\n        const hintDisabled = this.state.isAnswered;\n        return (\n            <>\n                <button onClick={this._handleAnswer} disabled={answerDisabled}>Answer</button>\n                <button onClick={this._handleyHintClick} disabled={hintDisabled}>Hint</button>\n                <button onClick={this._handleNextClick}>Next</button>\n            </>\n        );\n    }\n\n    render() {\n        const key = this.props.question.key;\n        return (\n            <div className=\"scaleQuestion\">\n                <p>Complete this scale:</p>\n                <h1 className=\"scaleQuestion__scaleName\">{String(key)}</h1>\n                <form onSubmit={this._handleAnswer}>\n                    {this.renderScaleInputs(key)}\n                    {this.renderActions()}\n                    {this.state.showHint && this.renderHint(key)}\n                    {this.state.isAnswered && this.renderSolution(key)}\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction _updateNote(noteIndex: number, note: Note, isCorrect: boolean) {\n    return (state: State) => {\n        return {\n            ...state,\n            notes: {\n                ...state.notes,\n                [noteIndex]: note\n            },\n            correctNotes: {\n                ...state.correctNotes,\n                [noteIndex]: isCorrect\n            },\n            showErrors: false\n        };\n    };\n}\n\nfunction _setAnswered() {\n    return (state: State, props: Props) => {\n        const actualNotes = props.question.key.toNotes();\n        const root = actualNotes[0];\n        const notes = Object.keys(state.notes).map(noteIndex => state.notes[noteIndex]);\n        const answeredNotes = [root, ...notes, root];\n        return {\n            ...state,\n            isAnswered: true,\n            showErrors: true,\n            showHint: false,\n            isCorrect: Note.areNoteArraysEqual(actualNotes, answeredNotes)\n        };\n    };\n}\n\nfunction _showHint() {\n    return (state: State) => ({\n        ...state,\n        showHint: true,\n        isCorrect: false,\n        hintIndex: _getRandomInt(0, 2, state.hintIndex)\n    });\n}\n\nfunction _range(length: number): number[] {\n    return Array.from(Array(length).keys());\n}\n\nfunction _getRandomInt(min: number, max: number, exclude: number = min - 1): number {\n    const randomInt = Math.floor(Math.random() * (max - min + 1)) + min;\n    if (randomInt === exclude) {\n        return _getRandomInt(min, max, exclude);\n    }\n    return randomInt;\n}\n\nfunction _isRoot(key: Key, noteIndex: number): boolean {\n    return noteIndex === 0 || noteIndex === key.scale.construction.length;\n}\n\nfunction _noteToSimpleNotation(note: Note): string {\n    const accidental = note.accidental === NATURAL_ACCIDENTAL\n        ? ''\n        : note.accidental === FLAT_ACCIDENTAL\n            ? 'b' : '#';\n    return note.pitch + accidental;\n}","import type {Question} from './question';\nimport {\n    ACCIDENTALS,\n    createNote,\n    FLAT_ACCIDENTAL,\n    NATURAL_ACCIDENTAL,\n    Note,\n    PITCHES,\n    SHARP_ACCIDENTAL\n} from './note';\nimport type {Mode} from './mode';\nimport {Key} from './key';\nimport type {ScaleName} from './scale';\nimport {\n    getScaleByName,\n    Scale\n} from './scale';\n\nexport type ScaleOptions = {\n    [ScaleName]: boolean\n};\n\nexport const IGNORED_NOTES: Note = [\n    createNote('B', SHARP_ACCIDENTAL),\n    createNote('C', FLAT_ACCIDENTAL),\n    createNote('E', SHARP_ACCIDENTAL),\n    createNote('F', FLAT_ACCIDENTAL)\n];\n\nexport function getRandomKey(includeAccidentals: boolean, includeModes: boolean, scaleOptions: ScaleOptions): Key {\n    const scale = getRandomScale(scaleOptions);\n    const mode = scale.modes.length > 0\n        ? includeModes ? getRandomMode(scale) : scale.modes[0]\n        : undefined;\n    return new Key(\n        getRandomNote(includeAccidentals),\n        scale,\n        mode\n    );\n}\n\nexport function getRandomScale(scaleOptions: ScaleOptions): Scale {\n    const scales = _scaleOptionsToScaleNames(scaleOptions).map(getScaleByName);\n    return getRandomArrayElement(scales);\n}\n\nexport function getRandomMode(scale: Scale): Mode {\n    return getRandomArrayElement(scale.modes);\n}\n\nexport function getRandomQuestion(includeAccidentals: boolean,\n    includeModes: boolean,\n    scaleOptions: ScaleOptions): Question {\n    const key = getRandomKey(\n        includeAccidentals,\n        includeModes,\n        scaleOptions\n    );\n    return {\n        type: 'scale',\n        key\n    };\n}\n\nexport function getRandomArrayElement<T>(array: T[]): T {\n    return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function isIgnoredNote(note: Note): boolean {\n    return !IGNORED_NOTES.map((ignoredNote: Note) => ignoredNote.equals(note)).some(comparison => !comparison);\n}\n\nexport function getRandomNote(includeAccidentals: boolean): Note {\n    const note = createNote(\n        getRandomArrayElement(PITCHES),\n        includeAccidentals ? getRandomArrayElement(ACCIDENTALS) : NATURAL_ACCIDENTAL\n    );\n    if (isIgnoredNote(note)) {\n        return getRandomNote();\n    }\n    return note;\n}\n\nfunction _scaleOptionsToScaleNames(scaleOptions: ScaleOptions): ScaleName[] {\n    return Object.keys(scaleOptions).reduce((scaleNames: ScaleName[], scaleName: ScaleName) => {\n        if (scaleOptions[scaleName]) {\n            return [\n                ...scaleNames,\n                scaleName\n            ];\n        }\n        return scaleNames;\n    }, []);\n}","// @flow\nimport React, {Component} from 'react';\nimport ScaleQuestion from './components/ScaleQuestion/ScaleQuestion';\nimport type {ScaleOptions} from './music/random';\nimport {getRandomQuestion} from './music/random';\nimport type {Question} from './music/question';\nimport './ScaleTrainer.scss';\nimport type {ScaleName} from './music/scale';\nimport {\n    MAJOR_SCALE,\n    Scale,\n    SCALES\n} from './music/scale';\n\ntype State = {\n    question: ?Question,\n    options: {\n        includeAccidentals: boolean,\n        includeModes: boolean,\n        scales: ScaleOptions\n    }\n};\n\nconst DEFAULT_SCALES = SCALES.reduce((scales: ScaleOptions, scale: Scale) => ({...scales, [scale.name]: true}), {});\n\nexport default class ScaleTrainer extends Component<void, State> {\n    state = {\n        question: undefined,\n        options: {\n            includeAccidentals: _getBooleanFromLocalStorage('includeAccidentals'),\n            includeModes: _getBooleanFromLocalStorage('includeModes'),\n            scales: _getObjectFromLocalStorage('scales', DEFAULT_SCALES)\n        }\n    };\n\n    componentWillMount() {\n        this._updateQuestion();\n    }\n\n    _handleNextClick = () => {\n        this._updateQuestion();\n    };\n\n    _handleOptionChange = (e: any) => {\n        const option = e.target.value;\n        const value = !this.state.options[option];\n        this.setState(_updateOption(option, value), this._updateQuestion);\n    };\n\n    _handleScaleOptionChange = (e: any) => {\n        const scale = e.target.value;\n        const value = !this.state.options.scales[scale];\n        this.setState(_updateScaleOption(scale, value), this._updateQuestion);\n    };\n\n    _updateQuestion = () => {\n        this.setState(state => {\n            return ({\n                question: getRandomQuestion(\n                    state.options.includeAccidentals,\n                    state.options.includeModes,\n                    state.options.scales\n                )\n            });\n        });\n    };\n\n    get _onlyMajorScaleSelected(): string {\n        const scales = this.state.options.scales;\n        const numberOfScales = Object.keys(scales)\n            .reduce((numberOfScales: number, scale: ScaleName) => scales[scale] ? numberOfScales + 1 : numberOfScales,\n                0);\n        return numberOfScales === 1 && scales[MAJOR_SCALE.name];\n    }\n\n    renderOptions() {\n        const onlyMajorScaleSelected = this._onlyMajorScaleSelected;\n        return (\n            <div className=\"scaleTrainer__options\">\n                <fieldset>\n                    <legend>Notes</legend>\n                    <label htmlFor=\"includeAccidentals\">\n                        <input\n                            type=\"checkbox\"\n                            id=\"includeAccidentals\"\n                            name=\"includeAccidentals\"\n                            value=\"includeAccidentals\"\n                            checked={this.state.options.includeAccidentals}\n                            onChange={this._handleOptionChange}/>\n                        Accidentals\n                    </label>\n                </fieldset>\n                <fieldset>\n                    <legend>Scales</legend>\n                    <div className=\"scaleTrainer__scales\">\n                        {SCALES.map((scale: Scale) => (\n                            <label htmlFor={scale.name} key={scale.name}>\n                                <input\n                                    type=\"checkbox\"\n                                    id={scale.name}\n                                    name={scale.name}\n                                    value={scale.name}\n                                    checked={this.state.options.scales[scale.name]}\n                                    disabled={onlyMajorScaleSelected && scale.name === MAJOR_SCALE.name}\n                                    onChange={this._handleScaleOptionChange}/>\n                                {scale.name}\n                            </label>\n                        ))}\n                    </div>\n                </fieldset>\n                <fieldset>\n                    <legend>Modes</legend>\n                    <label htmlFor=\"includeModes\">\n                        <input\n                            type=\"checkbox\"\n                            id=\"includeModes\"\n                            name=\"includeModes\"\n                            value=\"includeModes\"\n                            checked={this.state.options.includeModes}\n                            onChange={this._handleOptionChange}/>\n                        Modes\n                    </label>\n                </fieldset>\n            </div>\n        );\n    }\n\n    render() {\n        const question = this.state.question;\n        return (\n            <>\n                {this.renderOptions()}\n                {question && question.type === 'scale'\n                    ? <ScaleQuestion key={_questionToString(question)} question={question}\n                        onNextClick={this._handleNextClick}/>\n                    : <div>Loading...</div>}\n            </>\n        );\n    }\n}\n\nfunction _updateOption(option: string, value: boolean) {\n    return (state: State) => {\n        localStorage.setItem(option, value);\n        return {\n            ...state,\n            options: {\n                ...state.options,\n                [option]: value\n            }\n        };\n    };\n}\n\nfunction _updateScaleOption(scale: string, value: boolean) {\n    return (state: State) => {\n        const scales = {...state.options.scales};\n        scales[scale] = value;\n        const zeroScalesSelected = !Object.keys(scales).some(s => scales[s]);\n        if (zeroScalesSelected) {\n            scales[MAJOR_SCALE.name] = true;\n        }\n        localStorage.setItem('scales', JSON.stringify(scales));\n        return {\n            ...state,\n            options: {\n                ...state.options,\n                scales\n            }\n        };\n    };\n}\n\nfunction _questionToString(question: Question): string {\n    return `${question.type}${question.key}`;\n}\n\nfunction _getBooleanFromLocalStorage(key: string, defaultValue = true): boolean {\n    const value = localStorage.getItem(key);\n    if (value === null || typeof value === 'undefined') {\n        return defaultValue;\n    }\n    return value === 'true';\n}\n\nfunction _getObjectFromLocalStorage(key: string, defaultValue = {}): boolean {\n    const value = localStorage.getItem(key);\n    if (value === null || typeof value === 'undefined') {\n        return defaultValue;\n    }\n    return {\n        ...defaultValue,\n        ...JSON.parse(value)\n    };\n}","import React, {Component} from 'react';\nimport './App.scss';\nimport ScaleTrainer from './ScaleTrainer';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <ScaleTrainer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}