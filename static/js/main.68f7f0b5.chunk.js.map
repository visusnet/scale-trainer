{"version":3,"sources":["music/note.js","music/interval.js","music/key.js","ScaleQuestion.jsx","music/random.js","ScaleTrainer.jsx","App.js","serviceWorker.js","index.js"],"names":["PITCHES","SHARP_ACCIDENTAL","NATURAL_ACCIDENTAL","FLAT_ACCIDENTAL","ACCIDENTALS","noteToString","note","pitch","accidental","previousPitch","previousPitchIndex","indexOf","length","nextPitch","nextPitchIndex","normalizeAccidentals","arguments","undefined","areNotesEqual","note1","note2","onlySharpNote1","onlySharpNote2","arePitchesEqual","areAccidentalsEqual","MAJOR_MINOR_PERFECT_INTERVALS","AUGMENTED_DIMINISHED_INTERVALS","INTERVAL_SEMITONE_MAP","P1","d2","m2","A1","semitone","half tone","half step","H","M2","d3","tone","whole tone","whole step","W","m3","A2","M3","d4","P4","A3","d5","A4","tritone","P5","d6","m6","A5","M6","d7","m7","A6","M7","d8","P8","A7","NEXT_SEMITONE_MAP","A","_A","Object","defineProperty","B","_B","C","_C","D","_D","E","_E","F","_F","G","_G","relativeIntervalsToRootIntervals","root","relativeIntervals","intervalNames","semitonesToRoot","reduce","intervals","relativeInterval","toConsumableArray","concat","CHURCH_MODES","HARMONIC_MINOR_SCALE","name","construction","modes","MELODIC_MINOR_SCALE","CHURCH_SCALES","keyToString","key","scale","mode","scaleIndex","modeToString","trim","applyModeToConstruction","array","rotateByOffset","map","element","index","_rotateArray","keyToNotes","slice","notes","interval","currentNote","n","numberOfSemitones","augmentedNote","augmentedSemitones","addInterval","ScaleQuestionComponent","state","pitches","accidentals","isAnswered","isCorrect","showHint","_handleAnswer","e","preventDefault","_this","_canBeAnswered","setState","props","notes1","notes2","actualNotes","question","answeredNotes","keys","pitchIndex","Number","answeredNotesWithRoot","objectSpread","noteIndex","some","comparison","_handleHintClick","hintIndex","_getRandomInt","min","max","exclude","randomInt","Math","floor","random","_handleNextClick","onNextClick","_createHandlePitchChange","_updatePitch","value","pitchCandidate","toUpperCase","includes","_toPitch","target","_createHandleAccidentalChange","_updateAccidental","_getAccidental","this","_this2","accidentalIndex","accidentalKey","isRoot","isCurrentAccidental","react_default","a","createElement","className","htmlFor","type","checked","onChange","disabled","_this3","numberOfNotes","Array","from","_getPitch","tabIndex","autoFocus","maxLength","renderAccidentalInputs","scaleConstruction","hints","join","modifier","onSubmit","renderScaleInputs","onClick","renderHint","renderSolution","Component","IGNORED_NOTES","getRandomKey","includeModes","includeHarmonicMinor","includeMelodicMinor","scales","getRandomArrayElement","getRandomScale","getRandomMode","getRandomNote","ignoredNote","ScaleTrainer","_updateQuestion","_handleOptionChange","option","Fragment","renderOptions","ScaleQuestion_ScaleQuestionComponent","_questionToString","App","ScaleTrainer_ScaleTrainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68f7f0b5.chunk.js","sourcesContent":["// @flow\nexport type Pitch = 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G';\nexport type Accidental = '♯' | '♭' | '♮';\nexport type Note = {\n    pitch: Pitch,\n    accidental: Accidental\n}\n\nexport const PITCHES: Pitch[] = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\nexport const SHARP_ACCIDENTAL: Accidental = '♯';\nexport const NATURAL_ACCIDENTAL: Accidental = '♮';\nexport const FLAT_ACCIDENTAL: Accidental = '♭';\nexport const ACCIDENTALS: Accidental[] = [FLAT_ACCIDENTAL, SHARP_ACCIDENTAL, NATURAL_ACCIDENTAL];\n\nexport function accidentalToString(accidental: Accidental): string {\n    return accidental === NATURAL_ACCIDENTAL ? '' : accidental;\n}\n\nexport function noteToString(note: Note): string {\n    return note.pitch + accidentalToString(note.accidental);\n}\n\nexport function note(pitch: Pitch, accidental: ?Accidental): Note {\n    return {\n        pitch,\n        accidental: accidental ? accidental : NATURAL_ACCIDENTAL\n    };\n}\n\nexport function arePitchesEqual(note1: Note, note2: Note): boolean {\n    return note1.pitch === note2.pitch;\n}\n\nexport function areAccidentalsEqual(note1: Note, note2: Note): boolean {\n    return note1.accidental === note2.accidental;\n}\n\nexport function previousPitch(pitch: Pitch): Pitch {\n    const previousPitchIndex = (PITCHES.indexOf(pitch) + PITCHES.length - 1) % PITCHES.length;\n    return PITCHES[previousPitchIndex];\n}\n\nexport function nextPitch(pitch: Pitch): Pitch {\n    const nextPitchIndex = (PITCHES.indexOf(pitch) + 1) % PITCHES.length;\n    return PITCHES[nextPitchIndex];\n}\n\nexport function normalizeAccidentals(note: Note, preferredAccidental: Accidental = SHARP_ACCIDENTAL): Note {\n    if (preferredAccidental === FLAT_ACCIDENTAL) {\n        if (note.accidental === SHARP_ACCIDENTAL) {\n            return {\n                pitch: nextPitch(note.pitch),\n                accidental: note.pitch === 'B' || note.pitch === 'E' ? NATURAL_ACCIDENTAL : FLAT_ACCIDENTAL\n            };\n        } else if (note.accidental === FLAT_ACCIDENTAL) {\n            if (note.pitch === 'C' || note.pitch === 'F') {\n                return {\n                    pitch: previousPitch(note.pitch),\n                    accidental: NATURAL_ACCIDENTAL\n                };\n            }\n        }\n    } else {\n        if (note.accidental === FLAT_ACCIDENTAL) {\n            return {\n                pitch: previousPitch(note.pitch),\n                accidental: note.pitch === 'C' || note.pitch === 'F' ? NATURAL_ACCIDENTAL : SHARP_ACCIDENTAL\n            };\n        } else if (note.accidental === SHARP_ACCIDENTAL) {\n            if (note.pitch === 'B' || note.pitch === 'E') {\n                return {\n                    pitch: nextPitch(note.pitch),\n                    accidental: NATURAL_ACCIDENTAL\n                };\n            }\n        }\n    }\n    return note;\n}\n\nexport function areNotesEqual(note1: Note, note2: Note): boolean {\n    const onlySharpNote1 = normalizeAccidentals(note1);\n    const onlySharpNote2 = normalizeAccidentals(note2);\n    return arePitchesEqual(onlySharpNote1, onlySharpNote2) && areAccidentalsEqual(onlySharpNote1, onlySharpNote2);\n}\n\nexport function areNoteArraysEqual(notes1: Note[], notes2: Note[]): boolean {\n    if (notes1.length !== notes2.length) {\n        return false;\n    }\n    return !notes1.map((note1: Note, noteIndex: number) => {\n        const note2 = notes2[noteIndex];\n        return areNotesEqual(note1, note2);\n    }).some(comparison => !comparison);\n}","import type {Note} from './note';\nimport {\n    FLAT_ACCIDENTAL,\n    NATURAL_ACCIDENTAL,\n    note,\n    SHARP_ACCIDENTAL\n} from './note';\nimport type {Key} from './key';\n\nexport type MajorMinorPerfectInterval =\n    'P1' // perfect unison\n    | 'm2' // minor second\n    | 'M2' // major second\n    | 'm3' // minor third\n    | 'M3' // major third\n    | 'P4' // perfect fourth\n    | 'P5' // perfect fifth\n    | 'm6' // minor sixth\n    | 'M6' // major sixth\n    | 'm7' // minor seventh\n    | 'M7' // major seventh\n    | 'P8'; // perfect octave\n\nexport type AugmentedDiminishedInterval =\n    'd2' // diminished second\n    | 'A1' // augmented unison\n    | 'd3' // diminished third\n    | 'A2' // augmented second\n    | 'd4' // diminished fourth\n    | 'A3' // augmented third\n    | 'd5' // diminished fifth (=A4)\n    | 'A4' // augmented forth (=d5)\n    | 'd6' // diminished sixth\n    | 'A5' // augmented fifth\n    | 'd7' // diminished seventh\n    | 'A6' // augmented sixth\n    | 'd8' // diminished octave\n    | 'A7';\n\nexport type AlternativeInterval =\n    'semitone'\n    | 'half tone'\n    | 'half step'\n    | 'tone'\n    | 'whole tone'\n    | 'whole step'\n    | 'tritone';\n\nexport type StepInterval = 'H' | 'W';\n\nexport type Interval = MajorMinorPerfectInterval | AugmentedDiminishedInterval | AlternativeInterval | StepInterval;\n\nexport const MAJOR_MINOR_PERFECT_INTERVALS: MajorMinorPerfectInterval[] = [\n    'P1',\n    'm2',\n    'M2',\n    'm3',\n    'M3',\n    'P4',\n    'P5',\n    'm6',\n    'M6',\n    'm7',\n    'M7',\n    'P8'\n];\n\nexport const AUGMENTED_DIMINISHED_INTERVALS: AugmentedDiminishedInterval[] = [\n    'd2',\n    'A1',\n    'd3',\n    'A2',\n    'd4',\n    'A3',\n    'd5',\n    'A4',\n    'd6',\n    'A5',\n    'd7',\n    'A6',\n    'd8',\n    'A7'\n];\n\nexport const SEMITONE: AlternativeInterval = 'semitone';\nexport const WHOLE_TONE: AlternativeInterval = 'whole tone';\n\nexport const WHOLE_STEP: StepInterval = 'W';\nexport const HALF_STEP: StepInterval = 'H';\n\nexport const AUGMENTED_SECOND: AugmentedDiminishedInterval = 'A2';\n\nexport const INTERVAL_SEMITONE_MAP: {[Interval]: number} = {\n    'P1': 0,\n    'd2': 0,\n\n    'm2': 1,\n    'A1': 1,\n    'semitone': 1,\n    'half tone': 1,\n    'half step': 1,\n    'H': 1,\n\n    'M2': 2,\n    'd3': 2,\n    'tone': 2,\n    'whole tone': 2,\n    'whole step': 2,\n    'W': 2,\n\n    'm3': 3,\n    'A2': 3,\n\n    'M3': 4,\n    'd4': 4,\n\n    'P4': 5,\n    'A3': 5,\n\n    'd5': 6,\n    'A4': 6,\n    'tritone': 6,\n\n    'P5': 7,\n    'd6': 7,\n\n    'm6': 8,\n    'A5': 8,\n\n    'M6': 9,\n    'd7': 9,\n\n    'm7': 10,\n    'A6': 10,\n\n    'M7': 11,\n    'd8': 11,\n\n    'P8': 12,\n    'A7': 12\n};\n\nconst NEXT_SEMITONE_MAP = {\n    'A': {\n        [FLAT_ACCIDENTAL]: note('A'),\n        [NATURAL_ACCIDENTAL]: note('A', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('B')\n    },\n    'B': {\n        [FLAT_ACCIDENTAL]: note('B'),\n        [NATURAL_ACCIDENTAL]: note('C'),\n        [SHARP_ACCIDENTAL]: note('C', SHARP_ACCIDENTAL)\n    },\n    'C': {\n        [FLAT_ACCIDENTAL]: note('C'),\n        [NATURAL_ACCIDENTAL]: note('C', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('D')\n    },\n    'D': {\n        [FLAT_ACCIDENTAL]: note('D'),\n        [NATURAL_ACCIDENTAL]: note('D', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('E')\n    },\n    'E': {\n        [FLAT_ACCIDENTAL]: note('E'),\n        [NATURAL_ACCIDENTAL]: note('F'),\n        [SHARP_ACCIDENTAL]: note('F', SHARP_ACCIDENTAL)\n    },\n    'F': {\n        [FLAT_ACCIDENTAL]: note('F'),\n        [NATURAL_ACCIDENTAL]: note('F', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('G')\n    },\n    'G': {\n        [FLAT_ACCIDENTAL]: note('G'),\n        [NATURAL_ACCIDENTAL]: note('G', SHARP_ACCIDENTAL),\n        [SHARP_ACCIDENTAL]: note('A')\n    }\n};\n\nexport function addInterval(n: Note, interval: Interval | number): Note {\n    const numberOfSemitones = typeof interval === 'number'\n        ? interval\n        : INTERVAL_SEMITONE_MAP[interval];\n\n    let augmentedNote = n;\n    for (let augmentedSemitones = 0; augmentedSemitones < numberOfSemitones; augmentedSemitones++) {\n        augmentedNote = NEXT_SEMITONE_MAP[augmentedNote.pitch][augmentedNote.accidental];\n    }\n\n    return augmentedNote;\n}\n\nexport function relativeIntervalsToRootIntervals(root: Key,\n    relativeIntervals: Interval[],\n    intervalNames: Interval[] = MAJOR_MINOR_PERFECT_INTERVALS): Interval[] {\n    let semitonesToRoot = -1;\n    return relativeIntervals.reduce((intervals: Interval[], relativeInterval: Interval) => {\n        semitonesToRoot += INTERVAL_SEMITONE_MAP[relativeInterval];\n        return [...intervals, intervalNames[semitonesToRoot]];\n    }, []);\n}","import type {Note} from './note';\nimport {\n    normalizeAccidentals,\n    noteToString\n} from './note';\nimport type {Interval} from './interval';\nimport {\n    addInterval,\n    AUGMENTED_SECOND,\n    HALF_STEP,\n    WHOLE_STEP\n} from './interval';\n\nexport type ScaleConstruction = Interval[];\nexport type ChurchMode = 'ionian' | 'dorian' | 'phrygian' | 'lydian' | 'mixolydian' | 'aeolian' | 'locrian';\nexport type HarmonicMinorMode =\n    'harmonic minor'\n    | 'locrian ♯6'\n    | 'ionian ♯5'\n    | 'dorian ♯4'\n    | 'phrygian dominant'\n    | 'lydian ♯2'\n    | 'superlocrian';\nexport type MelodicMinorMode =\n    'melodic minor'\n    | 'dorian ♭2'\n    | 'lydian ♯5'\n    | 'lydian ♭7'\n    | 'mixolydian ♭6'\n    | 'locrian ♯2'\n    | 'superlocrian';\nexport type Mode = ChurchMode | HarmonicMinorMode | MelodicMinorMode;\nexport type Scale = {\n    name: 'major' | 'minor' | 'harmonic minor',\n    construction: ScaleConstruction,\n    modes: Mode[]\n};\nexport type Key = {\n    root: Note,\n    scale: Scale,\n    mode: Mode\n};\nexport const MAJOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP\n];\nexport const MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP\n];\nexport const HARMONIC_MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP,\n    AUGMENTED_SECOND,\n    HALF_STEP\n];\nexport const MELODIC_MINOR_CONSTRUCTION: ScaleConstruction = [\n    WHOLE_STEP,\n    HALF_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    WHOLE_STEP,\n    HALF_STEP\n];\n\nexport const CHURCH_MODES: ChurchMode[] = ['ionian',\n    'dorian',\n    'phrygian',\n    'lydian',\n    'mixolydian',\n    'aeolian',\n    'locrian'];\nexport const HARMONIC_MINOR_MODES: HarmonicMinorMode[] = [\n    'harmonic minor',\n    'locrian ♯6',\n    'ionian ♯5',\n    'dorian ♯4',\n    'phrygian dominant',\n    'lydian ♯2',\n    'ultralocrian'\n];\nexport const MELODIC_MINOR_MODES: MelodicMinorMode[] = [\n    'melodic minor',\n    'dorian ♭2',\n    'lydian ♯5',\n    'lydian ♭7',\n    'mixolydian ♭6',\n    'locrian ♯2',\n    'superlocrian'\n];\n\nexport const HARMONIC_MINOR_SCALE = {\n    name: 'harmonic minor',\n    construction: HARMONIC_MINOR_CONSTRUCTION,\n    modes: HARMONIC_MINOR_MODES\n};\nexport const MELODIC_MINOR_SCALE = {\n    name: 'melodic minor',\n    construction: MELODIC_MINOR_CONSTRUCTION,\n    modes: MELODIC_MINOR_MODES\n};\nexport const CHURCH_SCALES: Scale[] = [\n    {name: 'major', construction: MAJOR_CONSTRUCTION, modes: CHURCH_MODES},\n    {name: 'minor', construction: MINOR_CONSTRUCTION, modes: CHURCH_MODES}\n];\n\nexport function modeToString(mode: Mode, scale: Scale): string {\n    let scaleIndex = scale.modes.indexOf(mode);\n    return scaleIndex === 0 ? '' : `${mode} (mode ${scaleIndex + 1} of ${scale.name})`;\n}\n\nexport function scaleToString(scale: Scale): string {\n    return scale.name;\n}\n\nexport function keyToString(key: Key): string {\n    return `${noteToString(key.root)} ${scaleToString(key.scale)} ${modeToString(key.mode, key.scale)}`.trim();\n}\n\nexport function applyModeToConstruction(scale: Scale, mode: Mode): ScaleConstruction {\n    return _rotateArray(scale.construction, scale.modes.indexOf(mode));\n}\n\nexport function keyToNotes(key: Key): Note[] {\n    return [...applyModeToConstruction(key.scale, key.mode).slice(0, -1).reduce((notes: Note[], interval: Interval) => {\n        const previousNote = notes[notes.length - 1];\n        const currentNote = addInterval(previousNote, interval);\n        return [...notes, normalizeAccidentals(currentNote, key.root.accidental)];\n    }, [key.root]), key.root];\n}\n\nfunction _rotateArray<T>(array: T[], rotateByOffset: number) {\n    const length = array.length;\n    return array.map((element: T, index: number) => array[(((rotateByOffset + index) % length) + length) % length]);\n}\n","// @flow\nimport React, {Component} from 'react';\nimport type {ScaleQuestion} from './music/question';\nimport type {Key} from './music/key';\nimport {\n    applyModeToConstruction,\n    keyToNotes,\n    keyToString\n} from './music/key';\nimport type {\n    Accidental,\n    Pitch\n} from './music/note';\nimport {\n    ACCIDENTALS,\n    areNoteArraysEqual,\n    NATURAL_ACCIDENTAL,\n    noteToString,\n    PITCHES\n} from './music/note';\nimport './ScaleQuestion.scss';\nimport {\n    AUGMENTED_DIMINISHED_INTERVALS,\n    relativeIntervalsToRootIntervals\n} from './music/interval';\n\ntype Props = {\n    question: ScaleQuestion,\n    onNextClick: () => void\n}\n\ntype State = {\n    pitches: {[number]: Pitch},\n    accidentals: {[number]: Accidental},\n    isAnswered: boolean,\n    isCorrect: boolean,\n    showHint: boolean,\n    hintIndex: number\n}\n\nexport default class ScaleQuestionComponent extends Component<Props, State> {\n    state = {\n        pitches: {},\n        accidentals: {},\n        isAnswered: false,\n        isCorrect: false,\n        showHint: false\n    };\n\n    get _canBeAnswered(): boolean {\n        const numberOfPitches = Object.keys(this.state.pitches).length;\n        const requiredNumberOfAnswers = this.props.question.key.scale.construction.length - 1;\n        return numberOfPitches === requiredNumberOfAnswers;\n    }\n\n    _handleAnswer = (e: any) => {\n        e.preventDefault();\n        if (this._canBeAnswered) {\n            this.setState(_setAnswered());\n        }\n    };\n\n    _handleHintClick = (e: any) => {\n        e.preventDefault();\n        this.setState(_showHint());\n    };\n\n    _handleNextClick = (e: any) => {\n        e.preventDefault();\n        this.props.onNextClick();\n    };\n\n    _createHandlePitchChange = (noteIndex: number) => (e: any) => {\n        e.preventDefault();\n        this.setState(_updatePitch(noteIndex, _toPitch(e.target.value.toUpperCase())));\n    };\n\n    _createHandleAccidentalChange = (noteIndex: number, accidental: Accidental) => (e: any) => {\n        this.setState(_updateAccidental(noteIndex, accidental));\n    };\n\n    _getPitch(noteIndex: number): ?string {\n        if (this.state.pitches[noteIndex]) {\n            return this.state.pitches[noteIndex];\n        }\n        return '';\n    }\n\n    _getAccidental = (noteIndex: number): Accidental => {\n        if (this.state.accidentals[noteIndex]) {\n            return this.state.accidentals[noteIndex];\n        }\n        return NATURAL_ACCIDENTAL;\n    };\n\n    renderAccidentalInputs(noteIndex: number, key: Key) {\n        return ACCIDENTALS.map((accidental: Accidental, accidentalIndex: number) => {\n                const accidentalKey = `note-${noteIndex}-accidental`;\n                const isRoot = noteIndex === 0 || noteIndex === 7;\n                const isCurrentAccidental = isRoot\n                    ? key.root.accidental === accidental\n                    : this._getAccidental(noteIndex) === accidental;\n                return (\n                    <div className=\"scaleQuestion__accidental\" key={`${accidentalKey}-${accidentalIndex}`}>\n                        <label\n                            htmlFor={accidentalKey}>\n                            <input\n                                type=\"radio\"\n                                name={accidentalKey}\n                                value={accidental}\n                                checked={isCurrentAccidental}\n                                onChange={this._createHandleAccidentalChange(noteIndex, accidental)}\n                                disabled={isRoot}\n                            />\n                            {accidental}\n                        </label>\n                    </div>\n                );\n            }\n        );\n    }\n\n    renderScaleInputs(key: Key) {\n        const numberOfNotes = key.scale.construction.length + 1;\n        return (\n            <div className=\"scaleQuestion__notes\">\n                {_range(numberOfNotes).map(noteIndex => {\n                    const isRoot = noteIndex === 0 || noteIndex === 7;\n                    const pitch = isRoot\n                        ? key.root.pitch\n                        : this._getPitch(noteIndex);\n                    return (\n                        <div className=\"scaleQuestion__note\" key={`note-${noteIndex}`}>\n                            <div className=\"scaleQuestion__pitch\">\n                                <input\n                                    type=\"text\"\n                                    name={`note-${noteIndex}-pitch`}\n                                    value={pitch}\n                                    disabled={isRoot}\n                                    tabIndex={noteIndex}\n                                    autoFocus={noteIndex === 1}\n                                    onChange={this._createHandlePitchChange(noteIndex)}\n                                    maxLength={1}\n                                />\n                            </div>\n                            <div className=\"scaleQuestion__accidentals\">\n                                {this.renderAccidentalInputs(noteIndex, key)}\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    renderHint(key: Key) {\n        const scaleConstruction = applyModeToConstruction(key.scale, key.mode);\n        const hints = [\n            relativeIntervalsToRootIntervals(key.root, scaleConstruction).join(' '),\n            relativeIntervalsToRootIntervals(key.root, scaleConstruction, AUGMENTED_DIMINISHED_INTERVALS).join(' '),\n            scaleConstruction.join('-')\n        ];\n        return (\n            <div className=\"scaleQuestion__hint\">\n                <h1>Hint</h1>\n                <p>{hints[this.state.hintIndex]}</p>\n            </div>\n        );\n    }\n\n    renderSolution(key: Key) {\n        const notes = keyToNotes(key);\n        const modifier = this.state.isCorrect ? 'correct' : 'wrong';\n        const className = `scaleQuestion__solution scaleQuestion__solution--${modifier}`;\n        return (\n            <div className={className}>\n                <h1>Solution</h1>\n                {this.state.isCorrect\n                    ? <p>Your solution is correct!</p>\n                    : <p>Sorry, that's not correct.</p>}\n                <p>{notes.map(noteToString).join(', ')}</p>\n            </div>\n        );\n    }\n\n    render() {\n        const key = this.props.question.key;\n        return (\n            <div className=\"scaleQuestion\">\n                <p>Complete this scale:</p>\n                <h1>{keyToString(key)}</h1>\n                <form onSubmit={this._handleAnswer}>\n                    {this.renderScaleInputs(key)}\n                    <button\n                        onClick={this._handleAnswer}\n                        disabled={!this._canBeAnswered && !this.state.isAnswered}>\n                        Answer\n                    </button>\n                    <button\n                        onClick={this._handleHintClick}>\n                        Hint\n                    </button>\n                    <button onClick={this._handleNextClick}>Next</button>\n                    {this.state.showHint && this.renderHint(key)}\n                    {this.state.isAnswered && this.renderSolution(key)}\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction _toPitch(value: string): Pitch | '' {\n    const pitchCandidate: any = value.toUpperCase();\n    return PITCHES.includes(pitchCandidate)\n        ? pitchCandidate\n        : '';\n}\n\nfunction _updatePitch(noteIndex: number, pitch: Pitch | '') {\n    return (state: State) => {\n        const pitches = {\n            ...state.pitches,\n            [noteIndex]: pitch\n        };\n        if (pitch === '') {\n            delete pitches[noteIndex];\n        }\n        return {\n            ...state,\n            pitches\n        };\n    };\n}\n\nfunction _updateAccidental(noteIndex: number, accidental: Accidental) {\n    return (state: State) => ({\n        ...state,\n        accidentals: {\n            ...state.accidentals,\n            [noteIndex]: accidental\n        }\n    });\n}\n\nfunction _setAnswered() {\n    return (state: State, props: Props) => {\n        const actualNotes = keyToNotes(props.question.key);\n        const root = actualNotes[0];\n        const answeredNotes = Object.keys(state.pitches).map((pitchIndex: string) => ({\n            pitch: state.pitches[Number(pitchIndex)],\n            accidental: state.accidentals[Number(pitchIndex)] || NATURAL_ACCIDENTAL\n        }));\n        const answeredNotesWithRoot = [root, ...answeredNotes, root];\n        return {\n            ...state,\n            isAnswered: true,\n            isCorrect: areNoteArraysEqual(actualNotes, answeredNotesWithRoot)\n        };\n    };\n}\n\nfunction _showHint() {\n    return (state: State) => ({\n        ...state,\n        showHint: true,\n        hintIndex: _getRandomInt(0, 2, state.hintIndex)\n    });\n}\n\nfunction _range(length: number): number[] {\n    return Array.from(Array(length).keys());\n}\n\nfunction _getRandomInt(min: number, max: number, exclude: number = min - 1): number {\n    const randomInt = Math.floor(Math.random() * (max - min + 1)) + min;\n    if (randomInt === exclude) {\n        return _getRandomInt(min, max, exclude);\n    }\n    return randomInt;\n}","import type {Question} from './question';\nimport type {Note} from './note';\nimport {\n    ACCIDENTALS,\n    areNotesEqual,\n    FLAT_ACCIDENTAL,\n    note,\n    PITCHES,\n    SHARP_ACCIDENTAL\n} from './note';\nimport type {\n    Key,\n    Mode,\n    Scale\n} from './key';\nimport {\n    CHURCH_SCALES,\n    HARMONIC_MINOR_SCALE,\n    MELODIC_MINOR_SCALE\n} from './key';\n\nexport const IGNORED_NOTES: Note = [\n    note('B', SHARP_ACCIDENTAL),\n    note('C', FLAT_ACCIDENTAL),\n    note('E', SHARP_ACCIDENTAL),\n    note('F', FLAT_ACCIDENTAL)\n];\n\nexport function getRandomKey(includeModes: boolean, includeHarmonicMinor: boolean, includeMelodicMinor: boolean): Key {\n    const scale = getRandomScale(includeHarmonicMinor, includeMelodicMinor);\n    const mode = includeModes ? getRandomMode(scale) : scale.modes[0];\n    return {\n        root: getRandomNote(),\n        scale,\n        mode\n    };\n}\n\nexport function getRandomScale(includeHarmonicMinor: boolean, includeMelodicMinor: boolean): Scale {\n    let scales = CHURCH_SCALES;\n    if (includeHarmonicMinor) {\n        scales = [...scales, HARMONIC_MINOR_SCALE];\n    }\n    if (includeMelodicMinor) {\n        scales = [...scales, MELODIC_MINOR_SCALE];\n    }\n    return getRandomArrayElement(scales);\n}\n\nexport function getRandomMode(scale: Scale): Mode {\n    return getRandomArrayElement(scale.modes);\n}\n\nexport function getRandomQuestion(includeModes: boolean,\n    includeHarmonicMinor: boolean,\n    includeMelodicMinor: boolean): Question {\n    const key = getRandomKey(includeModes, includeHarmonicMinor, includeMelodicMinor);\n    return {\n        type: 'scale',\n        key\n    };\n}\n\nexport function getRandomArrayElement<T>(array: T[]): T {\n    return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function isIgnoredNote(n: Note): boolean {\n    return !IGNORED_NOTES.map((ignoredNote: Note) => areNotesEqual(ignoredNote, n)).some(comparison => !comparison);\n}\n\nexport function getRandomNote(): Note {\n    const note = {\n        pitch: getRandomArrayElement(PITCHES),\n        accidental: getRandomArrayElement(ACCIDENTALS)\n    };\n    if (isIgnoredNote(note)) {\n        return getRandomNote();\n    }\n    return note;\n}","// @flow\nimport React, {Component} from 'react';\nimport ScaleQuestion from './ScaleQuestion';\nimport {getRandomQuestion} from './music/random';\nimport type {Question} from './music/question';\nimport './ScaleTrainer.scss';\nimport {keyToString} from './music/key';\n\ntype State = {\n    question: ?Question,\n    includeModes: boolean,\n    includeHarmonicMinor: boolean,\n    includeMelodicMinor: boolean\n};\n\nexport default class ScaleTrainer extends Component<void, State> {\n    state = {\n        question: undefined,\n        includeModes: true,\n        includeHarmonicMinor: true,\n        includeMelodicMinor: true\n    };\n\n    componentWillMount() {\n        this._updateQuestion();\n    }\n\n    _handleNextClick = () => {\n        this._updateQuestion();\n    };\n\n    _handleOptionChange = (e: any) => {\n        const option = e.target.value;\n        this.setState({\n            [option]: !this.state[option]\n        }, this._updateQuestion);\n    };\n\n    _updateQuestion = () => {\n        this.setState(state => ({\n            question: getRandomQuestion(state.includeModes, state.includeHarmonicMinor, state.includeMelodicMinor)\n        }));\n    };\n\n    renderOptions() {\n        return (\n            <div className=\"scaleTrainer__options\">\n                <label htmlFor=\"includeModes\">\n                    <input type=\"checkbox\" name=\"includeModes\" value=\"includeModes\" checked={this.state.includeModes}\n                        onChange={this._handleOptionChange}/>\n                    Modes\n                </label>\n                <label htmlFor=\"includeHarmonicMinor\">\n                    <input type=\"checkbox\" name=\"includeHarmonicMinor\" value=\"includeHarmonicMinor\"\n                        checked={this.state.includeHarmonicMinor}\n                        onChange={this._handleOptionChange}/>\n                    Harmonic Minor\n                </label>\n                <label htmlFor=\"includeMelodicMinor\">\n                    <input type=\"checkbox\" name=\"includeMelodicMinor\" value=\"includeMelodicMinor\"\n                        checked={this.state.includeMelodicMinor}\n                        onChange={this._handleOptionChange}/>\n                    Melodic Minor\n                </label>\n            </div>\n        );\n    }\n\n    render() {\n        const question = this.state.question;\n        return (\n            <>\n                {this.renderOptions()}\n                {question && question.type === 'scale'\n                    ? <ScaleQuestion key={_questionToString(question)} question={question}\n                        onNextClick={this._handleNextClick}/>\n                    : <div>Loading...</div>}\n            </>\n        );\n    }\n}\n\nfunction _questionToString(question: Question): string {\n    return `${question.type}${keyToString(question.key)}`;\n}","import React, {Component} from 'react';\nimport './App.scss';\nimport ScaleTrainer from './ScaleTrainer';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <ScaleTrainer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}